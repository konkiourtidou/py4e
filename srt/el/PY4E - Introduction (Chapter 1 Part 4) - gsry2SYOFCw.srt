1
00:00:00,857 --> 00:00:02,328
- Τώρα λοιπόν θα αρχίσουμε να μαθαίνουμε

2
00:00:02,328 --> 00:00:05,367
την πραγματική γλώσσα Python.

3
00:00:05,367 --> 00:00:07,257
Τι λέμε;

4
00:00:07,257 --> 00:00:09,410
Μπορείτε να το σκεφτείτε αυτό
σχεδόν σαν να γράφετε,

5
00:00:09,410 --> 00:00:11,767
σχεδόν σαν να γράφετε μια ιστορία.

6
00:00:11,767 --> 00:00:13,733
Θα ξεκινήσουμε με ένα βασικό λεξιλόγιο.

7
00:00:13,733 --> 00:00:17,072
Θα μιλήσουμε λίγο για γραμμές ή προτάσεις.

8
00:00:17,072 --> 00:00:18,788
Στη συνέχεια, θα αρχίσουμε
να μιλάμε για το πώς

9
00:00:18,788 --> 00:00:20,860
θα συνδυάσουμε αυτές τις προτάσεις

10
00:00:20,860 --> 00:00:25,026
για να δημιουργήσουμε μια παράγραφο
με συνοχή, όπως πρέπει.

11
00:00:25,026 --> 00:00:27,648
Απλώς πρέπει να αποδεχτείτε
το γεγονός ότι όταν αρχίσω να

12
00:00:27,648 --> 00:00:30,662
σας διδάσκω αυτά τα πράγματα, 
δεν πρόκειται να βγάζουν νόημα

13
00:00:30,662 --> 00:00:33,861
για περίπου έξι ή επτά ακόμη κεφάλαια.

14
00:00:33,861 --> 00:00:37,661
Οπότε θα πρέπει, κατά κάποιο τρόπο,
να κάνετε υπομονή.

15
00:00:37,661 --> 00:00:40,834
Αποδεχθείτε... Θυμάμαι όταν τα 
πρωτομάθαινα, για μένα ήταν κάπως

16
00:00:40,834 --> 00:00:43,874
μπέρδεμα, μπέρδεμα,
μπέρδεμα, μπέρδεμα, μπέρδεμα...

17
00:00:43,874 --> 00:00:46,422
Ω! Που να πάρει... αυτό είναι φοβερό.

18
00:00:46,422 --> 00:00:49,378
Περιμένω ότι πολλοί από εσάς θα 
περάσετε από την ίδια διαδικασία.

19
00:00:49,378 --> 00:00:52,361
Απλώς μάθετε τα πρώτα κομμάτια,
αποδεχτείτε το γεγονός

20
00:00:52,361 --> 00:00:57,928
ότι δεν έχουν απαραίτητα νόημα,
σαν σύνολο.

21
00:00:57,928 --> 00:01:00,019
Υπομείνετέ μας, εντάξει;

22
00:01:00,019 --> 00:01:01,349
Θα ξεκινήσουμε λοιπόν με 
το λεξιλόγιο, θα αρχίσουμε

23
00:01:01,349 --> 00:01:03,234
να φτιάχνουμε προτάσεις, μετά θα έχουμε

24
00:01:03,234 --> 00:01:06,522
μικρές ιστορίες και παραγράφους.

25
00:01:06,522 --> 00:01:08,620
Αυτή είναι μια σύντομη ιστορία σχετικά

26
00:01:08,620 --> 00:01:10,915
με τον τρόπο μέτρησης των λέξεων στην Python.

27
00:01:10,915 --> 00:01:13,453
Έχει μερικές παραγράφους και τελικά 

28
00:01:13,453 --> 00:01:16,564
θα τα δούμε όλα αυτά.

29
00:01:16,564 --> 00:01:20,069
Ξεκινάμε με ένα σύνολο δεσμευμένων λέξεων.

30
00:01:20,069 --> 00:01:21,998
Τι είναι οι δεσμευμένες λέξεις;

31
00:01:21,998 --> 00:01:27,802
Είναι λέξεις που περιμένει η Python, 
όταν χρησιμοποιείτε αυτές τις λέξεις,

32
00:01:27,802 --> 00:01:28,806
ότι θα εννοούν ακριβώς αυτό που

33
00:01:28,806 --> 00:01:30,709
περιμένει η Python να εννοούν.

34
00:01:30,709 --> 00:01:32,812
Αυτό που πραγματικά σημαίνει είναι ότι 
δεν επιτρέπεται να τις χρησιμοποιήσετε

35
00:01:32,812 --> 00:01:35,275
για κανέναν άλλο σκοπό εκτός 
από τον σκοπό που θέλει η Python.

36
00:01:35,275 --> 00:01:37,295
Είναι μέρος της σύμβασης.

37
00:01:37,295 --> 00:01:41,115
Είναι σαν να έχετε σκύλο
και να του λέτε:

38
00:01:41,115 --> 00:01:44,409
"πως σου φαίνεται αυτό το 
τηλεοπτικό πρόγραμμα;"

39
00:01:44,409 --> 00:01:47,756
Ο σκύλος δεν έχει ιδέα τι λέτε,
και μετά του λέτε:

40
00:01:47,756 --> 00:01:50,067
"θέλεις να περιμένουμε μέχρι το Σάββατο"

41
00:01:50,067 --> 00:01:54,483
"για να πάμε στον κτηνίατρο;"

42
00:01:54,483 --> 00:01:55,933
Και ο σκύλος ακόμα δεν έχει
ιδέα τι του λέτε

43
00:01:55,933 --> 00:01:59,064
και συνεχίζετε κάπως έτσι: "πώς θα
σου φαινόταν να κάνουμε μια βόλτα;"

44
00:01:59,064 --> 00:02:00,373
Και τότε ο σκύλος πηγαίνει, περπατάει,

45
00:02:00,373 --> 00:02:04,191
"Ξέρω τι σημαίνει αυτό"
και μετά χτυπάει την πόρτα.

46
00:02:04,191 --> 00:02:06,493
Ο τρόπος που αντιλαμβάνεται ο σκύλος είναι
μπλα, μπλα, μπλα, μπλα, περπάτημα,

47
00:02:06,493 --> 00:02:09,493
μπλα, μπλα, μπλα, φαγητό,
μπλα, μπλα, μπλα, λιχουδιά,

48
00:02:09,493 --> 00:02:11,395
μπλα, μπλα, μπλα, περπάτημα.

49
00:02:11,395 --> 00:02:14,236
Αυτός περίπου είναι και ο τρόπος που η Python
κοιτάζει αυτές τις δεσμευμένες λέξεις.

50
00:02:14,236 --> 00:02:15,840
Όταν λέτε κλάση, αντιδρά... "κλάση",

51
00:02:15,840 --> 00:02:17,465
"ω, ξέρω τι σημαίνει αυτό".

52
00:02:17,465 --> 00:02:20,962
Τώρα αν πω zap, είναι
σαν "ω, ήταν το zap κάτι"

53
00:02:20,962 --> 00:02:24,187
"για το οποίο έπρεπε να αποφασίσω, ή
ίσως είναι ένα όνομα μεταβλητής."

54
00:02:24,187 --> 00:02:27,468
Λοιπόν, οι δεσμευμένες λέξεις είναι απλώς
λέξεις που όταν χρησιμοποιείτε

55
00:02:27,468 --> 00:02:30,822
αυτές τις λέξεις στην Python, και
υπάρχουν μόνο λίγες,

56
00:02:30,822 --> 00:02:39,234
όπως and ή del ή if, ίσως... pass, ίσως... in...

57
00:02:39,234 --> 00:02:41,579
Πολλές από αυτές θα καταλήξετε να μην τις χρησιμοποιείτε,

58
00:02:41,579 --> 00:02:43,718
απλώς αυτές είναι δεσμευμένες από την Python

59
00:02:43,718 --> 00:02:45,784
και μέρος του λεξιλογίου της Python.

60
00:02:45,784 --> 00:02:49,046
Αυτό είναι λεξιλόγιο Python.

61
00:02:49,046 --> 00:02:52,153
Όταν μεταβαίνουμε από λέξεις σε προτάσεις,

62
00:02:52,153 --> 00:02:54,583
βλέπετε ότι η Python έχει ένα σύνολο γραμμών.

63
00:02:54,583 --> 00:02:57,233
Ένα πρόγραμμα Python είναι μια σειρά δηλώσεων.

64
00:02:57,233 --> 00:02:59,179
Έχουν μια σειρά γιατί ο υπολογιστής

65
00:02:59,179 --> 00:03:02,076
θέλει να ξέρει "μετά τί",
"μετά τί","μετά τί".

66
00:03:02,076 --> 00:03:05,066
Το "μετά τί" ξεκινά από την αρχή.

67
00:03:05,066 --> 00:03:07,098
Λοιπόν έχω ήδη μιλήσει για μια εντολή εκχώρησης

68
00:03:07,098 --> 00:03:09,360
που ουσιαστικά λεέι x = 2.

69
00:03:09,360 --> 00:03:10,910
Αυτό δεν είναι μια μαθηματική δήλωση.

70
00:03:10,910 --> 00:03:15,011
Αυτή είναι μια οδηγία με την οποία λέμε,
"πάρτε αυτήν τη μεταβλητή δύο,"

71
00:03:15,011 --> 00:03:16,880
"αυτή την τιμή δύο, αυτή τη σταθερά δύο"

72
00:03:16,880 --> 00:03:19,487
"και τοποθέτησέ την σε μια θέση στη μνήμη σου,"

73
00:03:19,487 --> 00:03:22,267
"και θυμήσου ότι σου
ζήτησα να την ονομάσεις x."

74
00:03:22,267 --> 00:03:24,660
Το Χ είναι μια μεταβλητή, κάτι που φτιάξατε.

75
00:03:24,660 --> 00:03:29,013
Εσείς το επιλέξατε, αλλά είναι δουλειά 
της Python να το θυμάται.

76
00:03:29,013 --> 00:03:32,962
Αυτό λοιπόν λέει, ό, τι κι αν είναι 
το x, υπάρχει ένα δυάρι εκεί μέσα.

77
00:03:32,962 --> 00:03:36,267
Τώρα ανάκτησε την τιμή αυτού 
του x, προσθέστε δύο σε αυτό,

78
00:03:36,267 --> 00:03:38,218
που μας κάνει τέσσερα
και ξανά βάλε το στο x.

79
00:03:38,218 --> 00:03:39,821
Λοιπόν, αυτό το κάνει, αυτό, τέσσερα.

80
00:03:39,821 --> 00:03:41,093
Έστι το x είναι ένα τεσσάρι.

81
00:03:41,093 --> 00:03:44,174
Το Print(x) λέει "πήγαινε ψάξε πόσο ήταν"

82
00:03:44,174 --> 00:03:46,098
"αυτό το x και εκτύπωσέ το".

83
00:03:46,098 --> 00:03:49,244
Αυτά λοιπόν σημαίνουν ότι
κάθε γραμμή έχει κάτι.

84
00:03:49,244 --> 00:03:51,105
Χρησιμοποιώ μια δεσμευμένη λέξη, στην πραγματικότητα

85
00:03:51,105 --> 00:03:56,522
αυτή είναι μια συνάρτηση, αλλά
είναι και μια δεσμευμένη λέξη.

86
00:03:56,522 --> 00:03:58,472
Υπάρχουν δεσμευμένες λέξεις 
και όλα αυτά τα πράγματα

87
00:03:58,472 --> 00:03:59,442
και τα συνδυάζετε.

88
00:03:59,442 --> 00:04:02,340
Υπάρχουν τελεστές, το συν είναι τελεστής,

89
00:04:02,340 --> 00:04:03,475
το ίσον είναι τελεστής.

90
00:04:03,475 --> 00:04:05,027
Αυτά τα πράγματα κάνουν πράγματα

91
00:04:05,027 --> 00:04:07,330
και θα τα μάθουμε όλα αυτά εν καιρώ.

92
00:04:07,330 --> 00:04:13,508
Έτσι, τα βασικά δομικά
στοιχεία, οι γραμμές της Python.

93
00:04:13,508 --> 00:04:15,508
Καθώς παίρνουμε αυτές τις γραμμές
της Python και τις συνδυάζουμε,

94
00:04:15,508 --> 00:04:17,082
καταλήγουμε να κάνουμε παραγράφους.

95
00:04:17,082 --> 00:04:20,038
Προγραμματισμός σε παραγράφους.

96
00:04:20,038 --> 00:04:22,974
Ένα από τα πράγματα που είναι
σημαντικά είναι ότι σας έδειξα

97
00:04:22,974 --> 00:04:25,768
πώς να δουλεύετε διαδραστικά την Python,
έτσι απλά πληκτρολογείτε Python

98
00:04:25,768 --> 00:04:28,784
και πληκτρολογείτε μια δήλωση και
μια δήλωση και άλλη μια δήλωση.

99
00:04:28,784 --> 00:04:31,143
Αυτό γίνεται πραγματικά κουραστικό μετά
από περίπου τρεις ή τέσσερις γραμμές

100
00:04:31,143 --> 00:04:33,741
Python επειδή αρχίζετε να κάνετε λάθη

101
00:04:33,741 --> 00:04:35,237
και πρέπει να ξεκινήσετε από την αρχή.

102
00:04:35,237 --> 00:04:37,490
Το καλύτερο που έχετε να κάνετε,
καθώς το πρόγραμμά σας γίνεται 

103
00:04:37,490 --> 00:04:40,223
λίγο μεγαλύτερο, είναι να γράψετε ένα script.

104
00:04:40,223 --> 00:04:42,371
Τοποθετήστε τις οδηγίες Python σε ένα αρχείο

105
00:04:42,371 --> 00:04:45,347
και, στη συνέχεια, πείτε στην Python
να διαβάσει από αυτό το αρχείο

106
00:04:45,347 --> 00:04:49,638
και, στη συνέχεια, εκτελέστε το σενάριο
όπως έχει εισαχθεί σε αυτό το αρχείο.

107
00:04:49,638 --> 00:04:52,359
Συνηθίζουμε να ονομάζουμε αυτά τα αρχεία με .py

108
00:04:52,359 --> 00:04:55,106
και έχω μια σειρά βίντεο 
που μπορείτε να παρακολουθήσετε

109
00:04:55,106 --> 00:04:57,419
για να καταλάβετε πώς λειτουργεί όλο αυτό.

110
00:04:57,419 --> 00:04:59,999
Όπως είπα, μπορείτε να 
πληκτρολογήσετε διαδραστικά στην Python

111
00:04:59,999 --> 00:05:02,534
και αυτός είναι ένας πολύ καλός τρόπος
για να πειραματιστείτε με την Python,

112
00:05:02,534 --> 00:05:05,093
Να ελέγξτε αν μια εντολή κάνει
αυτό που νομίζετε ότι κάνει,

113
00:05:05,093 --> 00:05:08,728
αλλά τα σενάρια είναι ο τρόπος,
αφού ξεφύγουμε από τις μία ή δύο γραμμές

114
00:05:08,728 --> 00:05:14,743
κώδικα, γράφουμε σε αρχεία 
και μετά το τρέχουμε ξεχωριστά.

115
00:05:14,743 --> 00:05:17,980
Υπάρχουν μερικά βασικά μοτίβα.

116
00:05:17,980 --> 00:05:20,130
Είναι πραγματικά σημαντικό να
κατανοήσετε καθένα από αυτά τα μοτίβα

117
00:05:20,130 --> 00:05:22,840
και, όπως είπα, θα σας διδάξουμε
αυτά τα μοτίβα ξεχωριστά

118
00:05:22,840 --> 00:05:24,896
και στη συνέχεια θα τα συνδυάσουμε.

119
00:05:24,896 --> 00:05:25,825
Όταν τα συνδυάζετε

120
00:05:25,825 --> 00:05:28,401
τότε λέτε, "ω, αυτό είναι το πρόγραμμα!"

121
00:05:28,401 --> 00:05:30,835
Πρέπει να αναστείλετε την δυσπιστία.

122
00:05:30,835 --> 00:05:32,460
Έχουμε μερικά διαφορετικά μοτίβα.

123
00:05:32,460 --> 00:05:34,677
Το ένα είναι μια ακολουθία βημάτων, "κάνε αυτό",

124
00:05:34,677 --> 00:05:36,092
"μετά κάντε αυτό, μετά κάντε αυτό".

125
00:05:36,092 --> 00:05:38,279
Το υπό όρους είναι σαν να παραλείπεις κάτι.

126
00:05:38,279 --> 00:05:40,522
Το επαναλαμβανόμενο το κάνει 
ξανά και ξανά και ξανά.

127
00:05:40,522 --> 00:05:42,728
Οι υπολογιστές είναι πραγματικά καλοί
στο να επαναλαμβάνουν πράγματα,

128
00:05:42,728 --> 00:05:43,662
πολύ καλύτερα από τους ανθρώπους.

129
00:05:43,662 --> 00:05:46,723
Οι άνθρωποι κουράζονται να κάνουν
ξανά και ξανά το ίδιο πράγμα.

130
00:05:46,723 --> 00:05:49,735
Επιπλέον, έχουμε ήδη αποθηκεύσει
και επαναλάβει βήματα.

131
00:05:49,735 --> 00:05:52,485
Αν ρίξουμε μια ματιά σε
αυτό και ρίξουμε μια ματιά

132
00:05:52,485 --> 00:05:56,083
σε ένα πρόγραμμα Python,
αυτό είναι ένα κομμάτι κώδικα,

133
00:05:56,083 --> 00:05:57,204
αυτό είναι ένα μικρό σενάριο.

134
00:05:57,204 --> 00:06:00,018
Εάν το πληκτρολογήσετε σε κώδικα, 
πληκτρολογήστε αυτόν τον κώδικα Python

135
00:06:00,018 --> 00:06:03,672
σε ένα αρχείο και, στη συνέχεια,
το εκτελέσετε, ξεκινά στην αρχή

136
00:06:03,672 --> 00:06:04,609
και μετά πηγαίνει στην επόμενη γραμμή

137
00:06:04,609 --> 00:06:06,570
και στην επόμενη γραμμή 
και στην επόμενη γραμμή.

138
00:06:06,570 --> 00:06:09,518
Η Python εκτελεί τα σενάρια
καθώς τα γράφετε.

139
00:06:09,518 --> 00:06:13,604
βάλε μια μεταβλητή, βρες ένα
μέρος που ονομάζεται, στη μνήμη σου,

140
00:06:13,604 --> 00:06:16,987
που ονομάζεται x, βάλε το δύο σε αυτό,

141
00:06:16,987 --> 00:06:18,683
μετά πηγαίνετε στο επόμενο, εκτυπώστε το.

142
00:06:18,683 --> 00:06:20,482
Έτσι το πρόγραμμα παράγει έξοδο.

143
00:06:20,482 --> 00:06:23,319
Τώρα πηγαίνε και διάβασε το x και προσθέστε
του δύο, και βάλε το ξανά στο x,

144
00:06:23,319 --> 00:06:25,703
οπότε το x είναι τέσσερα και,
στη συνέχεια, εκτυπώστε το.

145
00:06:25,703 --> 00:06:28,053
Αυτή η πλευρά εδώ, αυτό
ονομάζεται διάγραμμα ροής.

146
00:06:28,053 --> 00:06:29,632
Δεν πρόκειται να σας βάλω να
σχεδιάσετε διαγράμματα ροής.

147
00:06:29,632 --> 00:06:31,173
Θα τα σχεδιάσω μόνο μερικές φορές

148
00:06:31,173 --> 00:06:33,039
με τρόπους που νομίζω ότι θα σας βοηθήσουν.

149
00:06:33,039 --> 00:06:34,874
Αλλά μπορείτε να το σκεφτείτε ως Python,

150
00:06:34,874 --> 00:06:37,118
όταν τελειώσει κάτι, πηγαίνει στο επόμενο,

151
00:06:37,118 --> 00:06:38,578
εκτός κι αν του πείτε κάτι άλλο.

152
00:06:38,578 --> 00:06:40,108
Τελειώνει αυτό, συνεχίζει στο επόμενο.

153
00:06:40,108 --> 00:06:41,977
Τελειώνει αυτό, συνεχίζει στο επόμενο.

154
00:06:41,977 --> 00:06:45,449
Τελειώνει αυτό, τώρα το
πρόγραμμα έχει τελειώσει.

155
00:06:45,449 --> 00:06:46,874
Αυτό λοιπόν είναι τα διαδοχικά βήματα.

156
00:06:46,874 --> 00:06:49,281
Απλώς τα πληκτρολογείτε,
η Python τα τρέχει.

157
00:06:49,281 --> 00:06:52,725
Είναι σημαντικές αλλά
κάπως αδιάφορες,

158
00:06:52,725 --> 00:06:55,598
γιατί μπορείς να φτάσεις μέχρι εδώ

159
00:06:55,598 --> 00:06:57,116
και δεν μπορείς να τις κάνεις έξυπνες,

160
00:06:57,116 --> 00:06:59,090
γιατί πάντα θα κάνει το επόμενο.

161
00:06:59,090 --> 00:07:00,679
Λοιπόν, το επόμενο πράγμα που
κάνουμε είναι αυτό που ονομάζεται

162
00:07:00,679 --> 00:07:03,025
βήματα υπό όρους και εδώ αρχίζει

163
00:07:03,025 --> 00:07:07,045
να γίνεται έξυπνο, όπου μπορείτε
να κωδικοποιήσετε τον εγκέφαλό σας

164
00:07:07,045 --> 00:07:09,169
στον υπολογιστή, όπως 
ω, περιμένετε ένα δευτερόλεπτο,

165
00:07:09,169 --> 00:07:12,101
ας κάνουμε αυτό το βήμα μόνο
αν κάτι είναι αληθής.

166
00:07:12,101 --> 00:07:15,022
Η σύνταξη που τείνουμε να
χρησιμοποιούμε εδώ

167
00:07:15,022 --> 00:07:20,666
είναι η δεσμευμένη λέξη if, if.

168
00:07:20,666 --> 00:07:23,234
Το if είναι σαν μια μικρή 
διασταύροση στο δρόμο.

169
00:07:23,234 --> 00:07:25,490
Μπορείς να πας από τη μία 
μεριά ή από την άλλη,

170
00:07:25,490 --> 00:07:27,252
και κάνεις μια ερώτηση.

171
00:07:27,252 --> 00:07:29,986
Έτσι μέσα στην δήλωση if, εδώ 
ακριβώς, υπάρχει μια ερώτηση,

172
00:07:29,986 --> 00:07:35,487
που λέει "είναι το x μικρότερο του 10;", 
που έχει αποτέλεσμα αληθές ή ψευδές.

173
00:07:35,487 --> 00:07:37,042
Αν είναι μικρότερο του 10, είναι αληθές.

174
00:07:37,042 --> 00:07:38,935
Αν είναι μεγαλύτερο ή ίσο
του 10, είναι ψευδές.

175
00:07:38,935 --> 00:07:43,241
Αυτό που κάνουμε στη συνέχεια είναι, 
αν είναι μικρότερο του 10,

176
00:07:43,241 --> 00:07:45,851
έχουμε αυτό το μπλοκ κώδικα με εσοχή, 
υπάρχει και αυτή η άνω και κάτω τελεία

177
00:07:45,851 --> 00:07:46,879
που μας λέει ότι βρισκόμαστε στην αρχή

178
00:07:46,879 --> 00:07:48,502
ενός μπλοκ κώδικα με εσοχή.

179
00:07:48,502 --> 00:07:52,253
Αυτό που λέει βασικά είναι ότι αν αυτό
είναι αληθές, εκτελέστε αυτόν τον κώδικα.

180
00:07:52,253 --> 00:07:53,982
αν είναι ψευδές, παραλείψτε
αυτόν τον κώδικα

181
00:07:53,982 --> 00:07:55,763
Μπορεί είτε να το εκτελέσει
είτε να το παραλείψει,

182
00:07:55,763 --> 00:08:00,224
ανάλογα με αυτήν την 
ερώτηση που τίθεται.

183
00:08:00,224 --> 00:08:01,057
Αν κοιτάξετε αυτόν τον κώδικα,

184
00:08:01,057 --> 00:08:04,080
είναι προφανές τι συμβαίνει.

185
00:08:04,080 --> 00:08:06,127
Κατεβαίνει, το x είναι πέντε.

186
00:08:06,127 --> 00:08:09,642
Αν το x είναι μικρότερο του 10, είναι αληθές,
οπότε εκτελεί αυτόν τον κώδικα

187
00:08:09,642 --> 00:08:13,324
και εκτυπώνει το μικρότερο
και μετά επιστρέφει εδώ,

188
00:08:13,324 --> 00:08:15,729
Βγαίνει από την εσοχή,
μετά λειτουργεί σειριακά.

189
00:08:15,729 --> 00:08:17,880
Αυτό καταλήγει να είναι ένα είδος μπλοκ.

190
00:08:17,880 --> 00:08:21,619
Αν το x είναι μεγαλύτερο του 20,
Αν το x είναι μεγαλύτερο του 20,

191
00:08:21,619 --> 00:08:24,595
ω! γύρνα πίσω, γύρνα πίσω.

192
00:08:24,595 --> 00:08:27,657
Αν το x είναι μεγαλύτερο του 20,
αυτό αποδεικνύεται ψευδές,

193
00:08:27,657 --> 00:08:30,274
επειδή το x είναι πέντε και
έτσι παραλείπει αυτό.

194
00:08:30,274 --> 00:08:33,254
Το μεγαλύτερο δεν εμφανίζεται ποτέ,
και μετά συνεχίζει

195
00:08:33,254 --> 00:08:35,240
και εκτυπώνει Τέλος, ουπς
αυτό είναι ένα τυπογραφικό λάθος.

196
00:08:35,240 --> 00:08:37,951
Κάντε το αυτό print με πεζά, 
και εκτυπώνει Τέλος.

197
00:08:37,951 --> 00:08:45,216
Οτότε, έρχετε εδώ, εκτελεί αυτό,
παραλείπει αυτό και μετά τελειώνει.

198
00:08:45,216 --> 00:08:48,475
Εδώ είναι το τελευταίο για το οποίο 
θα μιλήσουμε, τα επαναλαμβανόμενα βήματα.

199
00:08:48,475 --> 00:08:52,400
Θα επιστρέψουμε στο αποθήκευση
και ανάκτηση αργότερα,

200
00:08:52,400 --> 00:08:53,652
αλλά προς το παρόν, θα μιλήσουμε

201
00:08:53,652 --> 00:08:56,105
μόνο για τρία από τα τέσσερα.

202
00:08:56,105 --> 00:08:58,067
Αυτό είναι ένα άλλο πρόγραμμα.

203
00:08:58,067 --> 00:09:01,736
Το κλειδί είναι ότι θα
χρησιμοποιήσουμε αυτήν την ίδια επιλογή,

204
00:09:01,736 --> 00:09:03,812
από όπου θα μπούμε, αλλά
στη συνέχεια θα εκτελέσουμε αυτά

205
00:09:03,812 --> 00:09:05,725
για λίγο και στη συνέχεια έχουμε

206
00:09:05,725 --> 00:09:08,131
μια συνθήκη εξόδου, από όπου θα βγούμε.

207
00:09:08,131 --> 00:09:11,880
Αυτό επαναλαμβάνεται, ξανά και
ξανά και ξανά και ξανά.

208
00:09:11,880 --> 00:09:15,444
Αυτός στην ουσία είναι ο τρόπος με τον οποίο
λέμε στους υπολογιστές να κάνουν πράγματα

209
00:09:15,444 --> 00:09:17,203
που φαίνονται δύσκολα, αλλά

210
00:09:17,203 --> 00:09:20,311
είναι πιο δύσκολα από φύσης
για τους ανθρώπους.

211
00:09:20,311 --> 00:09:22,647
Πώς κωδικοποιούμε αυτή την
έννοια, ότι θέλουμε

212
00:09:22,647 --> 00:09:25,835
να κάνουμε κάτι για πάντα, όχι
για πάντα, αλλά για λίγο;

213
00:09:25,835 --> 00:09:28,465
Πώς κωδικοποιούμε αυτή την έννοια;

214
00:09:28,465 --> 00:09:30,625
Το κάνουμε με αυτόν τον τρόπο.

215
00:09:30,625 --> 00:09:33,505
Έχουμε τη δήλωσή μας, διαδοχικά
πάμε σε αυτό το while.

216
00:09:33,505 --> 00:09:35,025
Το while είναι μια δεσμευμένη λέξη.

217
00:09:35,025 --> 00:09:37,611
Θέτει μια άλλη ερώτηση, αυτή
είναι μια ερώτηση αληθής/ψευδής.

218
00:09:37,611 --> 00:09:39,804
Είναι το n μεγαλύτερο του μηδενός;

219
00:09:39,804 --> 00:09:42,948
Το διαβάζω αυτό ως όσο το n
παραμένει μεγαλύτερο του μηδενός,

220
00:09:42,948 --> 00:09:44,854
συνέχισε να εκτελείς αυτό το μπλοκ με εσοχή.

221
00:09:44,854 --> 00:09:48,028
Έχετε μια άνω κάτω τελεία στο τέλος
και μετά έχετε δύο γραμμές

222
00:09:48,028 --> 00:09:51,406
κώδικα με εσοχή, οπότε
αυτό μας λέει ποιος είναι ο βρόχος,

223
00:09:51,406 --> 00:09:54,548
και αυτό τώρα βγαίνει από την εσοχή.

224
00:09:54,548 --> 00:09:58,569
Έρχετε εδώ και αν αυτό είναι
αληθές, αν αυτό είναι αληθές,

225
00:09:58,569 --> 00:10:01,023
αν αυτό είναι αληθές, εκτελεί
αυτές τις δύο γραμμές.

226
00:10:01,023 --> 00:10:04,924
Εκτυπώνει το n, το n είναι πέντε,
μετά λέει, n = n - 1,

227
00:10:04,924 --> 00:10:07,645
το οποίο αναγκάζει το n να γίνει
τέσσερα και ξανά πηγαίνει πάνω

228
00:10:07,645 --> 00:10:09,911
και πηγαίνει επάνω και θέτει
αυτή την ερώτηση ξανά.

229
00:10:09,911 --> 00:10:11,804
Είναι το n μεγαλύτερο του μηδενός;

230
00:10:11,804 --> 00:10:14,549
Εάν είναι, συνεχίζει και εκτυπώνει τέσσερα,

231
00:10:14,549 --> 00:10:19,055
και μετά το μειώνει και κάνει
αυτό το τέσσερα, τρία, δύο,

232
00:10:19,055 --> 00:10:20,974
και εκτυπώνει ένα, μετά έρχεται επάνω.

233
00:10:20,974 --> 00:10:25,938
Μετά από αυτό, το n είναι πια 
μηδέν, το n είναι μηδέν τώρα.

234
00:10:25,938 --> 00:10:28,620
Το n δεν είναι πια μεγαλύτερο
του μηδενός, και έτσι

235
00:10:28,620 --> 00:10:30,956
φεύγει για την έξοδο και πηγαίνει εδώ κάτω,

236
00:10:30,956 --> 00:10:33,176
έτσι παίρνει τη ράμπα
εξόδου και πηγαίνει εδώ

237
00:10:33,176 --> 00:10:36,750
και εκτελεί την επόμενη γραμμή.

238
00:10:36,750 --> 00:10:38,259
Θα ανφερθούμε σε όλα αυτά ξανά,

239
00:10:38,259 --> 00:10:40,806
οπότε απλώς προσπαθώ να
σας δώσω τη γενική εικόνα.

240
00:10:40,806 --> 00:10:42,213
Τα επόμενα δύο κεφάλαια
θα ξανασυναντήσουμε

241
00:10:42,213 --> 00:10:43,895
όλα αυτά τα πράγματα
και θα τα εξετάσουμε πολύ

242
00:10:43,895 --> 00:10:48,087
πιο λεπτομερώς με πολύ
καλύτερες πληροφορίες.

243
00:10:48,087 --> 00:10:50,931
Αυτό τώρα, κατά κάποιο τρόπο,
τα συνδυάζει όλα αυτά.

244
00:10:50,931 --> 00:10:56,492
Και πάλι, δεν θέλω να τα ξέρετε
πραγματικά αυτά τα πράγματα.

245
00:10:56,492 --> 00:10:58,221
Θα τα μάθετε σε μερικές εβδομάδες.

246
00:10:58,221 --> 00:11:00,556
Θα το ξανά δείτε αυτό το πρόγραμμα.

247
00:11:00,556 --> 00:11:03,384
Αλλά αυτό σας δείχνει πώς
συνδυάζουμε αυτά τα μοτίβα

248
00:11:03,384 --> 00:11:08,642
της επανάληψης, ακολουθίας
και υπό όρους μαζί.

249
00:11:08,642 --> 00:11:10,357
Αυτός είναι λίγος κώδικας ακολουθίας.

250
00:11:10,357 --> 00:11:12,621
Έρχετε εδώ, εκτελεί αυτό, το οποίο

251
00:11:12,621 --> 00:11:15,195
ζητά ένα όνομα αρχείου
και ανοίγει το αρχείο.

252
00:11:15,195 --> 00:11:17,264
Δημιουργεί μια δομή δεδομένων
που ονομάζεται λεξικό.

253
00:11:17,264 --> 00:11:18,407
Όλα αυτά είναι σειριακά.

254
00:11:18,407 --> 00:11:20,793
Τώρα, το for είναι μια άλλη μορφή βρόχου,

255
00:11:20,793 --> 00:11:22,711
οπότε, αυτό θα επαναληφθεί για λίγο.

256
00:11:22,711 --> 00:11:26,053
Αυτό είναι μέσα σε έναν βρόχο,
μπορούμε να έχουμε και δύο εσοχές.

257
00:11:26,053 --> 00:11:28,806
Αυτός είναι άλλος ένας βρόχος, οπότε
αυτά επαναλαμβάνονται

258
00:11:28,806 --> 00:11:31,705
και μετά πηγαίνει κάτω, στο
επόμενο σειριακό κομμάτι.

259
00:11:31,705 --> 00:11:32,805
Τότε κάνει αυτό.

260
00:11:32,805 --> 00:11:34,558
Να κι άλλος ένας βρόχος, θα εκτελεστεί και

261
00:11:34,558 --> 00:11:36,550
μετά εδώ έχουμε μιά συνθήκη,
που θα εκτελεστεί και μετά

262
00:11:36,550 --> 00:11:38,833
όταν τελειώσουν όλα, θα
εκτυπώσουμε αυτό το τελευταίο.

263
00:11:38,833 --> 00:11:46,133
Και αυτό, φυσικά, είναι το πρόγραμμα που κάνει...

264
00:11:46,133 --> 00:11:47,441
ξέτετε, βρίσκει την πιο συχνά επαναλαμβανόμενη

265
00:11:47,441 --> 00:11:49,203
λέξη και την εκτυπώνει.

266
00:11:49,203 --> 00:11:51,343
Αυτή, λοιπόν, είναι μια σύντομη ιστορία σε Python.

267
00:11:51,343 --> 00:11:54,622
Διαβάζει κάποια δεδομένα,
διαβάζει το όνομα ενός αρχείου,

268
00:11:54,622 --> 00:11:58,422
ανοίγει το αρχείο, λέει διάφορα
για το πως θα κάνουμε το ιστόγραμμα

269
00:11:58,422 --> 00:12:02,194
και μετά αναζητά την
πιο συχνά εμφανιζόμενη λέξη.

270
00:12:02,194 --> 00:12:05,010
Μην ανησυχείτε και πολύ για αυτό.

271
00:12:05,010 --> 00:12:06,177
Μέσα στις επόμενες εβδομάδες θα καλύψουμε

272
00:12:06,177 --> 00:12:08,487
τα κενά, ώστε να καταλάβετε απόλυτα

273
00:12:08,487 --> 00:12:12,922
κάθε γραμμή αυτού του κώδικα.

274
00:12:12,922 --> 00:12:15,513
Αυτή είναι μια γρήγορη
επισκόπηση του 1ου Κεφαλαίου.

275
00:12:15,513 --> 00:12:18,374
Μείνετε μαζί μας.

276
00:12:18,374 --> 00:12:21,436
Θα χρειαστεί να φτάσουμε στο Κεφάλαιο 7 για
να αρχίσουν όλα αυτά να αποκτούν νόημα.

277
00:12:21,436 --> 00:12:24,524
Πρέπει πραγματικά να με
εμπιστευτείτε, ότι μαθαίνετε

278
00:12:24,524 --> 00:12:27,575
σημαντικά πράγματα και ότι
όλα θα αποκτήσουν νόημα

279
00:12:27,575 --> 00:12:32,291
όταν το συγκεντρώσουμε, κάπου,
στο Κεφάλαιο 7 σε λίγες εβδομάδες.

280
00:12:32,291 --> 00:12:35,708
(ήσυχη τζαζ μουσική πιάνου)

