1
00:00:00,707 --> 00:00:02,963
- Γεια σας και καλώς ήρθατε στο Κεφάλαιο 2.

2
00:00:02,963 --> 00:00:04,813
Τώρα θα συνεχίσουμε την κουβέντα μας

3
00:00:04,813 --> 00:00:07,740
για τα δομικά στοιχεία της
Python, μεταβλητές, σταθερές,

4
00:00:07,740 --> 00:00:10,158
δηλώσεις, εκφράσεις κ.λπ.

5
00:00:10,158 --> 00:00:12,524
Το πρώτο πράγμα για το οποίο 
πρέπει να μιλήσουμε είναι οι σταθερές.

6
00:00:12,524 --> 00:00:14,441
Αυτές είναι απλά, πράγματα, 
που ονομάζουμε σταθερές

7
00:00:14,441 --> 00:00:15,824
γιατί δεν αλλάζουν.

8
00:00:15,824 --> 00:00:18,087
Είναι αριθμοί, συμβολοσειρές κ.λπ.,

9
00:00:18,087 --> 00:00:20,926
και τις χρησιμοποιήσουμε για να ξεκινήσουμε
κατά κάποιο τρόπο τους υπολογισμούς

10
00:00:20,926 --> 00:00:25,508
ή, ξέρετε, αν κάτι είναι
μεγαλύτερο από 40 ώρες

11
00:00:25,508 --> 00:00:27,074
θα κάνουμε κάτι και

12
00:00:27,074 --> 00:00:29,432
έτσι το 40 είναι η σταθερά
σ' αυτή την περίπτωση.

13
00:00:29,432 --> 00:00:34,056
Έτσι, έχουμε 123, έχουμε
98,6, έχουμε το "Hello World",

14
00:00:34,056 --> 00:00:36,180
το οποίο είναι μια συμβολοσειρά
περικλείοντάς την σε εισαγωγικά,

15
00:00:36,180 --> 00:00:39,023
περνάμε κάθε ένα από αυτά
στη συνάρτηση print

16
00:00:39,023 --> 00:00:40,950
και μια συνέπεια της συνάρτησης print

17
00:00:40,950 --> 00:00:42,580
είναι ότι παράγεται έξοδος.

18
00:00:42,580 --> 00:00:46,814
Έτσι, το print(123), εμφανίζει 123,
το print(98.6), το εμφανίζει.

19
00:00:46,814 --> 00:00:49,905
Αυτή λοιπόν, είναι στην πραγματικότητα
η σύνταξη των σταθερών

20
00:00:49,905 --> 00:00:52,591
και χωρίς σταθερές δεν
μπορούμε να γράψουμε

21
00:00:52,591 --> 00:00:53,796
και πολλά πράγματα.

22
00:00:53,796 --> 00:00:56,546
Το άλλο είδος θεμελιώδους έννοιας

23
00:00:56,546 --> 00:00:59,517
κάθε γλώσσας προγραμματισμού
είναι οι δεσμευμένες λέξεις

24
00:00:59,517 --> 00:01:01,119
και, όπως είπα και νωρίτερα,
οι δεσμευμένες λέξεις

25
00:01:01,119 --> 00:01:04,555
είναι αυτές οι ειδικές λέξεις
που η Python τις ακούει

26
00:01:04,555 --> 00:01:07,088
και έχουν πολύ συγκεκριμένη σημασία,

27
00:01:07,088 --> 00:01:10,194
οπότε όταν η Python βλέπει ένα αν, 
δεν είναι μια οποιαδήποτε λέξη,

28
00:01:10,194 --> 00:01:15,176
σημαίνει πως η Python εφαρμόζει
την υπό όρους εκτέλεση.

29
00:01:15,176 --> 00:01:18,473
Οι μεταβλητές είναι το τρίτο
δομικό στοιχείο,

30
00:01:18,473 --> 00:01:21,986
και αυτός είναι ένας τρόπος με τον
οποίο μπορείτε να ζητήσετε από την Python

31
00:01:21,986 --> 00:01:24,932
να διαθέσει ένα κομμάτι μνήμης και
στη συνέχεια να του δώσει ένα όνομα,

32
00:01:24,932 --> 00:01:26,652
και μπορείτε να βάλετε πράγματα σε αυτό.

33
00:01:26,652 --> 00:01:28,209
Μερικές φορές εισάγετε μόνο μία τιμή.

34
00:01:28,209 --> 00:01:29,309
Αργότερα θα δούμε,

35
00:01:29,309 --> 00:01:31,529
κάνουμε συλλογές στα κεφάλαια
οκτώ και εννέα.

36
00:01:31,529 --> 00:01:34,138
Θα δούμε ότι περισσότερες από μία τιμές

37
00:01:34,138 --> 00:01:35,656
μπορούν να εισαχθούν σε μια μεταβλητή.

38
00:01:35,656 --> 00:01:38,257
Και η μεταβλητή, το πώς
ελέγχουμε τη μεταβλητή,

39
00:01:38,257 --> 00:01:40,314
γίνεται μέσω της εντολή εκχώρησης

40
00:01:40,314 --> 00:01:41,398
και, όπως είπα και πριν,

41
00:01:41,398 --> 00:01:43,445
είναι σημαντικό να σκεφτόμαστε
την εντολή εκχώρησης

42
00:01:43,445 --> 00:01:45,451
σαν να έχει ένα βέλος προς αυτήν.

43
00:01:45,451 --> 00:01:48,820
Έτσι, αυτό δεν σημαίνει ότι το x
πάντα είναι το ίδιο με το 12.2,

44
00:01:48,820 --> 00:01:52,080
αυτό που λέει είναι
πάρε το 12.2, βρες ένα μέρος,

45
00:01:52,080 --> 00:01:55,095
βρες κάποια μνήμη στον
υπολογιστή σου κα. Python,

46
00:01:55,095 --> 00:01:57,376
ονόμασέ την x, επιλέγουμε το x,

47
00:01:57,376 --> 00:02:00,944
αυτό είναι το μεταβλητό μέρος,
το επιλέξαμε εμείς, σωστά;

48
00:02:00,944 --> 00:02:04,246
και στη συνέχεια βάλε σ' αυτό το 12,
και το ίδιο ισχύει για 14,

49
00:02:04,246 --> 00:02:09,079
πήγαινε και βρες άλλο ένα σημείο, ονόμασέ
το y και μετά βάλε ένα 14 εδώ μέσα.

50
00:02:09,079 --> 00:02:12,139
Έτσι, σκεφτείτε το ως ένα βέλος
κάθε φορά που βλέπετε

51
00:02:12,139 --> 00:02:16,306
αυτή την ισότητα, την ανάθεση,
σε μια εντολή ανάθεσης.

52
00:02:18,462 --> 00:02:21,251
Τώρα, αυτές οι μεταβλητές έχουν μία τιμή.

53
00:02:21,251 --> 00:02:24,905
Οπότε τώρα αν έχουμε αυτές τις
τρεις προτάσεις, αυτές τις δύο

54
00:02:24,905 --> 00:02:26,656
και στη συνέχεια εκτελείται η τρίτη,

55
00:02:26,656 --> 00:02:29,779
λέει βάλτε το 100 στο x, αλλά
αυτό σβήνει την παλιά τιμή

56
00:02:29,779 --> 00:02:32,831
του 12.2 και την ξαναγράφει με 100,

57
00:02:32,831 --> 00:02:34,941
και έτσι μπορούμε να αλλάξουμε τις μεταβλητές.

58
00:02:34,941 --> 00:02:39,108
αυτός είναι άλλος ένας λόγος
που τις αποκαλούμε μεταβλητές.

59
00:02:40,098 --> 00:02:42,148
Υπάρχουν ορισμένα ονόματα,
τώρα εισάγουμε κάποιους κανόνες

60
00:02:42,148 --> 00:02:43,218
για την ονοματολογία μεταβλητών.

61
00:02:43,218 --> 00:02:45,629
Μπορείτε να ξεκινήσετε με
ένα γράμμα ή μια κάτω παύλα.

62
00:02:45,629 --> 00:02:48,421
Έχουμε την τάση να μην χρησιμοποιούμε
κάτω παύλα ως συνηθισμένοι προγραμματιστές,

63
00:02:48,421 --> 00:02:51,817
τείνουμε να τις κρατάμε για μεταβλητές

64
00:02:51,817 --> 00:02:54,386
που χρησιμοποιούμε για να επικοινωνούμε
με την ίδια την Python

65
00:02:54,386 --> 00:02:55,632
οπότε όταν δημιουργούμε μια μεταβλητή,

66
00:02:55,632 --> 00:02:59,391
τείνουμε να μην χρησιμοποιούμε
κάτω παύλα ως τον πρώτο χαρακτήρα.

67
00:02:59,391 --> 00:03:02,608
Μπορείτε να χρησιμοποιήσετε γράμματα
και αριθμούς και κάτω παύλες

68
00:03:02,608 --> 00:03:05,158
μετά τον πρώτο χαρακτήρα και
γίνεται διάκριση πεζών-κεφαλαίων,

69
00:03:05,158 --> 00:03:06,503
αλλά είναι πραγματικά κακή ιδέα

70
00:03:06,503 --> 00:03:09,753
να χρησιμοποιείτε τα πεζά-κεφαλαία
ως το μοναδικό διαφοροποιητή.

71
00:03:10,636 --> 00:03:14,719
Έτσι, σε αυτή την περίπτωση, τα spam,
eggs, spam23, και _speed,

72
00:03:15,737 --> 00:03:16,763
είναι όλα απολύτως αποδεκτά.

73
00:03:16,763 --> 00:03:18,417
Πιθανότατα δεν θα το χρησιμοποιούσαμε αυτό,

74
00:03:18,417 --> 00:03:20,057
εκτός αν το κάναμε πραγματικά

75
00:03:20,057 --> 00:03:21,828
επειδή η Python μας είπε να
χρησιμοποιήσουμε αυτήν τη μεταβλητή.

76
00:03:21,828 --> 00:03:24,407
Το 23spam αρχίζει με έναν αριθμό,
το #sign αρχίζει με #

77
00:03:24,407 --> 00:03:28,373
και η τελεία δεν είναι αποδεκτός
χαρακτήρας στις μεταβλητές.

78
00:03:28,373 --> 00:03:31,623
Και τα spam, Spam και SPAM είναι διαφορετικά,

79
00:03:33,011 --> 00:03:35,094
αλλά αυτό δεν είναι κάτι από το οποίο θέλετε

80
00:03:35,094 --> 00:03:37,594
να εξαρτάστε πάρα πολύ,

81
00:03:38,475 --> 00:03:40,045
οπότε αυτοί είναι οι κανόνες για τα ονόματα.

82
00:03:40,045 --> 00:03:42,196
Τείνουμε να τα ξεκινάμε με ένα γράμμα

83
00:03:42,196 --> 00:03:44,041
και στη συνέχεια να χρησιμοποιούμε
γράμματα, αριθμούς και κάτω παύλα.

84
00:03:44,041 --> 00:03:45,762
Οι κάτω παύλες, εκτός από τον πρώτο χαρακτήρα,

85
00:03:45,762 --> 00:03:50,641
είναι γενικά αρκετά συνηθισμένες και
θα δείτε ότι χρησιμοποιούνται πολύ.

86
00:03:50,641 --> 00:03:52,319
Τώρα, όταν επιλέγουμε ονόματα μεταβλητών,

87
00:03:52,319 --> 00:03:54,503
ένα από τα θέματα για τις μεταβλητές,
είναι να επιλέξουμε το όνομα.

88
00:03:54,503 --> 00:03:57,678
Επιλέγουμε το όνομα x,
επιλέγουμε το όνομα y,

89
00:03:57,678 --> 00:03:59,341
και μερικές φορές μας αρέσουν τα σύντομα,

90
00:03:59,341 --> 00:04:01,292
αλλά μερικές φορές τα θέλουμε περιγραφικά

91
00:04:01,292 --> 00:04:04,696
και την έννοια ότι τα ονόματα
μεταβλητών γίνονται περιγραφικα 

92
00:04:04,696 --> 00:04:07,209
συχνά μπερδεύουν τους αρχάριους μαθητές.

93
00:04:07,209 --> 00:04:09,681
Μερικές φορές είναι πολύ χρήσιμο,

94
00:04:09,681 --> 00:04:11,558
εάν πρόκειτε να χρησιμοποιήσετε
μια γραμμή κειμένου

95
00:04:11,558 --> 00:04:14,236
να ονομάσετε τη μεταβλητή γραμμή,
αυτό είναι υπέροχο,

96
00:04:14,236 --> 00:04:16,002
επειδή το επόμενο άτομο που θα
διαβάσει το πρόγραμμά σας θα πει,

97
00:04:16,002 --> 00:04:17,874
ω, αυτή πρέπει να είναι η γραμμή κειμένου.

98
00:04:17,874 --> 00:04:21,405
Ενώ, μπορεί επίσης να γίνει
παραπλανητικό, αυτή η γραμμή,

99
00:04:21,405 --> 00:04:24,423
το όνομα μιας μεταβλητής,
έχει κατά κάποιο τρόπο νόημα.

100
00:04:24,423 --> 00:04:26,248
Έτσι, μερικές φορές θα έχουμε
ακόμη και μεταβλητές στον ενικό

101
00:04:26,248 --> 00:04:29,539
και μεταβλητές πληθυντικού,
όπως φίλος και φίλοι,

102
00:04:29,539 --> 00:04:30,696
γνωρίζει ότι είναι πληθυντικός;

103
00:04:30,696 --> 00:04:33,472
Γνωρίζει η Python για τον
ενικό και τον πληθυντικό αριθμό;

104
00:04:33,472 --> 00:04:34,755
Και η απάντηση είναι όχι.

105
00:04:34,755 --> 00:04:38,050
Έτσι, κάποιες φορές επιλέγουμε
μεταβλητές που δεν έχουν νόημα,

106
00:04:38,050 --> 00:04:39,942
κάποιες φορές επιλέγουμε μεταβλητές
που έχουν μεγάλη σημασία.

107
00:04:39,942 --> 00:04:42,857
Αυτό είναι απλά κάτι που εσείς
ως αρχάριοι προγραμματιστές

108
00:04:42,857 --> 00:04:44,435
θα πρέπει να καταλάβετε,

109
00:04:44,435 --> 00:04:47,988
ότι μπορούμε να επιλέξουμε
οτιδήποτε θέλουμε.

110
00:04:47,988 --> 00:04:50,622
Και έτσι, θα δείτε ότι θα προσπαθήσω
να επιστήσω την προσοχή σας σε αυτό 

111
00:04:50,622 --> 00:04:52,844
στις πρώτες διαλέξεις,
καθώς προχωράμε.

112
00:04:52,844 --> 00:04:56,040
Λοιπόν, εδώ είναι ένα τμήμα κώδικα
με μια εντολή εκχώρησης,

113
00:04:56,040 --> 00:04:57,985
δύο εντολές εκχώρησης,
έναν πολλαπλασιασμό

114
00:04:57,985 --> 00:05:00,077
και μια εντολή εκτύπωσης

115
00:05:00,077 --> 00:05:02,105
και μπορείτε να καταλάβετε
τι κάνει αυτό;

116
00:05:02,105 --> 00:05:05,637
Τώρα, η Python είναι απόλυτα 
ευχαριστημένη με αυτόν τον κώδικα,

117
00:05:05,637 --> 00:05:06,688
επειδή το εκχωρεί εκεί,

118
00:05:06,688 --> 00:05:09,033
είπατε, παρακαλώ, δώσε μου αυτό ως όνομα

119
00:05:09,033 --> 00:05:10,774
και, στη συνέχεια, εκχωρούμε
στις δύο μεταβλητές

120
00:05:10,774 --> 00:05:12,587
και στη συνέχεια ανασύρουμε προσεκτικά

121
00:05:12,587 --> 00:05:15,221
το περιεχόμενο αυτών των δύο μεταβλητών, 
τις πολλαπλασιάζουμε,

122
00:05:15,221 --> 00:05:17,124
και το εκχωρούμε σε μια άλλη μεταβλητή

123
00:05:17,124 --> 00:05:18,727
και στη συνέχεια εκτυπώνουμε το
περιςχόμενο αυτής της μεταβλητής.

124
00:05:18,727 --> 00:05:21,345
Φαίνεται, ξέρετε, πώς μπορούμε
να καταλάβουμε τι είναι,

125
00:05:21,345 --> 00:05:22,879
απλά πρέπει να παρατηρήσετε
πολύ προσεκτικά,

126
00:05:22,879 --> 00:05:25,676
και ένας μόνο λάθος χαρακτήρας,
και η Python θα είναι,

127
00:05:25,676 --> 00:05:28,259
καταλαβαίνετε, ιδιαίτερα
δυσαρεστημένη, εντάξει;

128
00:05:29,699 --> 00:05:33,045
Αυτός,λοιπόν, είναι ένας τρόπος
για να γράψετε αυτό το πρόγραμμα.

129
00:05:33,045 --> 00:05:35,068
Είναι δύσκολο όμως, επειδή οποιοσδήποτε
από αυτούς τους χαρακτήρες

130
00:05:35,068 --> 00:05:37,333
είναι μεγάλης μεταβλητότητας
και είναι τυχαίοι,

131
00:05:37,333 --> 00:05:39,540
δεν είναι και πολύ φιλικό

132
00:05:39,540 --> 00:05:42,041
προς οποιονδήποτε, που μπορεί να
διαβάσει το πρόγραμμά σας.

133
00:05:42,041 --> 00:05:43,378
Τώρα αυτό φαίνεται λίγο πιο φιλικό.

134
00:05:43,378 --> 00:05:44,384
Είναι το ίδιο πρόγραμμα,

135
00:05:44,384 --> 00:05:46,702
γιατί η Python θέλει απλώς
κάτι αντίστοιχο.

136
00:05:46,702 --> 00:05:49,710
Διαλέγεις a, διαλέγεις b,
και επιλέγεις c,

137
00:05:49,710 --> 00:05:53,276
και είναι πολύ πιο εύκολο για
εμάς να δούμε τι συμβαίνει,

138
00:05:53,276 --> 00:05:57,359
και έτσι είναι, κατά κάποιο
τρόπο από εδώ ως εδώ,

139
00:05:58,237 --> 00:05:59,965
είναι πολύ πιο φιλικό,

140
00:05:59,965 --> 00:06:02,072
αλλά, μπορούμε να είμαστε
ακόμη πιο φιλικοί

141
00:06:02,072 --> 00:06:03,932
αν επιλέξουμε μνημονικά
ονόματα μεταβλητών.

142
00:06:03,932 --> 00:06:05,349
Αυτό είναι, αυτό δεν είναι μνημονικό,

143
00:06:05,349 --> 00:06:06,876
αυτό είναι σύντομο και βολικό,

144
00:06:06,876 --> 00:06:09,054
αυτό είναι μακρύ και άβολο.

145
00:06:09,054 --> 00:06:12,327
Η Python είναι ευχαριστημένη
με οποιοδήποτε από αυτά.

146
00:06:12,327 --> 00:06:13,630
Εδώ, από την άλλη πλευρά,
έχουμε μια άλλη έκδοση

147
00:06:13,630 --> 00:06:15,479
του ίδιου ακριβώς προγράμματος,

148
00:06:15,479 --> 00:06:18,391
και τώρα σκέφτεστε,
ω ναι, τώρα το κατάλαβα.

149
00:06:18,391 --> 00:06:22,710
Το 35 είναι ο αριθμός των ωρών,
το 12.50 είναι το ωρομίσθιο,

150
00:06:22,710 --> 00:06:24,853
και μετά πολλαπλασιάζουμε
τις ώρες με το ωρομίσθιο

151
00:06:24,853 --> 00:06:25,970
και προκύπτει ο μισθός,

152
00:06:25,970 --> 00:06:27,410
και εκτυπώνουμε τον μισθό.

153
00:06:27,410 --> 00:06:28,632
Τώρα, όποιος έγραψε αυτό το πρόγραμμα

154
00:06:28,632 --> 00:06:32,949
μας βοηθά πολύ να καταλάβουμε
τι συμβαίνει,

155
00:06:32,949 --> 00:06:33,894
και αυτό είναι καλό.

156
00:06:33,894 --> 00:06:36,939
Επιλέγοντας ονόματα μεταβλητών,
για την Python πάλι,

157
00:06:36,939 --> 00:06:39,207
και τα τρία αυτά είναι ίδια
για την Python.

158
00:06:39,207 --> 00:06:42,050
Η επιλογή των ονομάτων μεταβλητών
με τρόπο που βοηθά τον αναγνώστη σας

159
00:06:42,050 --> 00:06:44,948
να καταλάβει τι συμβαίνει,
είναι σπουδαίο πράγμα.

160
00:06:44,948 --> 00:06:48,865
Το πρόβλημα είναι, είναι επικίνδυνο,
αν διαβάσετε αυτό

161
00:06:50,238 --> 00:06:53,092
και πιστέψετε ότι με κάποιο κάποιο
τρόπο η Python καταλαβαίνει τη μισθοδοσία.

162
00:06:53,092 --> 00:06:54,705
ότι αν ονομάσετε μια μεταβλητή ώρες,

163
00:06:54,705 --> 00:06:56,800
η Python ξέρει τι σημαίνει ώρες.

164
00:06:56,800 --> 00:06:59,958
Η απάντηση είναι, η Python,
δεν ενδιαφέρεται πραγματικά

165
00:06:59,958 --> 00:07:00,929
πώς ονομάζετε τη μεταβλητή,

166
00:07:00,929 --> 00:07:03,521
αρκεί όπως κι αν την ονομάσετε,
έτσι να τη χρησιμοποιήσετε, σωστά;

167
00:07:03,521 --> 00:07:05,456
και έτσι πρέπει να είστε προσεκτικοί.

168
00:07:05,456 --> 00:07:08,706
Και έτσι θα δείτε, όταν γράφω
τον κώδικά μου

169
00:07:09,685 --> 00:07:13,417
αυτές τις πρώτες εβδομάδες,
στις πρώτες διαλέξεις,

170
00:07:13,417 --> 00:07:15,439
μερικές φορές θα γράφω χρησιμοποιώντας
ασυνάρτητα ονόματα,

171
00:07:15,439 --> 00:07:17,464
μερικές φορές θα γράφω
με εξαιρετικά σύντομα

172
00:07:17,464 --> 00:07:18,763
αλλά χωρίς νόημα ονόματα μεταβλητών

173
00:07:18,763 --> 00:07:20,962
και μερικές φορές θα χρησιμοποιώ
ονόματα μεταβλητών όλο νόημα

174
00:07:20,962 --> 00:07:24,918
και θα σας επιστήσω την προσοχή
σε αυτό και θα το καταλάβετε.

175
00:07:24,918 --> 00:07:27,198
Θα αρχίσετε, όταν βλέπετε
αυτό το τρίτο είδος

176
00:07:27,198 --> 00:07:30,303
έχει σημαντικές μεταβλητές
ή μνημονικά ονόματα μεταβλητών,

177
00:07:30,303 --> 00:07:32,567
θα θελήσετε ενστικτωδώς

178
00:07:32,567 --> 00:07:34,706
να δώσετε στην Python περισσότερη ευφυΐα

179
00:07:34,706 --> 00:07:36,640
από ό, τι της αξίζει.

180
00:07:36,640 --> 00:07:39,460
Υποθέτω ότι αυτός είναι ίσως ο
καλύτερος τρόπος για να το πω αυτό.

181
00:07:39,460 --> 00:07:41,098
Έτσι, έχουμε μιλήσει για σταθερές,

182
00:07:41,098 --> 00:07:42,725
έχουμε μιλήσει για δεσμευμένες λέξεις,

183
00:07:42,725 --> 00:07:44,892
μιλήσαμε και για μεταβλητές.

184
00:07:46,135 --> 00:07:48,144
Και έτσι, εδώ έχουμε μια πρόταση,

185
00:07:48,144 --> 00:07:49,686
όπως έχουμε ήδη κάνει κάποια
από αυτά τα πράγματα,

186
00:07:49,686 --> 00:07:53,849
όπου είπαμε x = 2,
ανακτούμε την παλιά τιμή του x

187
00:07:53,849 --> 00:07:57,697
και προσθέτουμε 2 σε αυτή, έτσι ώστε να
γίνει 4, και έπειτα εκτυπώνουμε το 4.

188
00:07:57,697 --> 00:07:59,864
Η print είναι μια
ενσωματωμένη συνάρτηση

189
00:07:59,864 --> 00:08:02,134
και της δίνουμε ό,τι
θέλουμε να εκτυπώσουμε,

190
00:08:02,134 --> 00:08:06,051
οπότε αυτή η παρένθεση είναι
μέρος μιας κλήσης συνάρτησης.

191
00:08:07,584 --> 00:08:10,079
Εντάξει, έτσι μια εντολή εκχώρησης,

192
00:08:10,079 --> 00:08:13,257
πρέπει πραγματικά να κατανοήσετε αυτή την έννοια

193
00:08:13,257 --> 00:08:16,406
ότι έχει αυτή τη φύση βέλους

194
00:08:16,406 --> 00:08:19,981
και ότι υπολογίζει το αποτέλεσμα
όλης αυτής της δεξιάς πλευράς

195
00:08:19,981 --> 00:08:23,369
πριν αλλάξουμε την αριστερή πλευρά,

196
00:08:23,369 --> 00:08:26,422
οπότε μπορείτε να το σκεφτείτε
αυτό κάπως έτσι, στο βήμα 1

197
00:08:26,422 --> 00:08:29,335
το κάνει αυτό και στη συνέχεια,
στο βήμα 2 κάνει το αντίγραφο,

198
00:08:29,335 --> 00:08:31,642
και έτσι μπορείτε να
έχετε κάτι σαν το x

199
00:08:31,642 --> 00:08:35,767
και στις δύο πλευρές μιας
εντολής εκχώρησης.

200
00:08:35,767 --> 00:08:39,934
Και έτσι, αν για παράδειγμα έχουμε
x και το x έχει την τιμή 0.6,

201
00:08:41,003 --> 00:08:43,864
το x έχει το 0.6,
αυτό που συμβαίνει είναι ότι,

202
00:08:43,864 --> 00:08:46,966
πρώτα αγνοεί κατά κάποιο τρόπο
αυτό το μέρος εδώ

203
00:08:46,966 --> 00:08:48,767
και υπολογίζει την τιμή της έκφρασης.

204
00:08:48,767 --> 00:08:52,684
Έτσι ανασύρει το 0.6, όπου εμφανίζεται
το x, βγάζει το 0.6,

205
00:08:52,684 --> 00:08:55,148
μετά αρχίζει να εκτελεί αυτούς
τους υπολογισμούς

206
00:08:55,148 --> 00:08:56,955
και μετά έχει τη νέα τιμή.

207
00:08:56,955 --> 00:08:58,859
Αφού ολοκληρωθούν όλοι οι υπολογισμοί,

208
00:08:58,859 --> 00:09:03,026
t τότε και μόνο τότε πρόκειται
να το βάλει αυτό πίσω στο x.

209
00:09:04,405 --> 00:09:08,036
Και έτσι το παίρνει κάπως αυτό
και το βάζει ξανά στο x

210
00:09:08,036 --> 00:09:10,600
και στη συνέχεια σβήνει
την παλιά τιμή.

211
00:09:10,600 --> 00:09:12,529
Σε αυτό το σημείο, όλα έχουν
ληφθεί υπόψη  

212
00:09:12,529 --> 00:09:15,758
και αυτό έχει μειωθεί σε αυτό το 0.93,

213
00:09:15,758 --> 00:09:19,591
και έτσι αυτό είναι αυτό που
τίθεται ως νέα τιμή.

214
00:09:20,790 --> 00:09:23,444
Επομένως, στη συνέχεια,
θα μιλήσουμε λίγο περισσότερο

215
00:09:23,444 --> 00:09:26,111
για τη δημιουργία πιο
σύνθετων εκφράσεων.

216
00:09:27,765 --> 00:09:30,598
(κλασσική μουσική)

