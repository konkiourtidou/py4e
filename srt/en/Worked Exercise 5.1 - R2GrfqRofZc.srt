1
00:00:00,120 --> 00:00:03,454
- [Charles] Hello, and welcome
to Python for Everybody.

2
00:00:03,454 --> 00:00:05,535
I'm doing a worked example,
my name's Charles Severance,

3
00:00:05,535 --> 00:00:07,612
and I'm the instructor for the class.

4
00:00:07,612 --> 00:00:10,377
And the worked example that
we're gonna work on right now

5
00:00:10,377 --> 00:00:14,361
is in Chapter 5, and it is Exercise 1.

6
00:00:14,361 --> 00:00:17,850
We're going to repeat asking for a number

7
00:00:17,850 --> 00:00:20,369
until the word done is entered,

8
00:00:20,369 --> 00:00:22,819
and then we're gonna print the,

9
00:00:22,819 --> 00:00:25,305
the total, and then we're
gonna print the count,

10
00:00:25,305 --> 00:00:27,624
and then we're gonna print
the average at the end.

11
00:00:27,624 --> 00:00:29,021
And we're gonna enter some numbers,

12
00:00:29,021 --> 00:00:30,874
then we're gonna do some error checking.

13
00:00:30,874 --> 00:00:33,567
And we're gonna keep on
going, so we'll ignore this,

14
00:00:33,567 --> 00:00:35,296
we'll just say invalid input,

15
00:00:35,296 --> 00:00:36,959
and then we're gonna ignore it.

16
00:00:36,959 --> 00:00:39,001
So I'm gonna start from scratch.

17
00:00:39,001 --> 00:00:42,352
I'm going to write a,

18
00:00:42,352 --> 00:00:46,379
I'll start my terminal,
start some Atom, and so,

19
00:00:46,379 --> 00:00:49,175
I can, I've opened the py4e folder,

20
00:00:49,175 --> 00:00:52,143
and that's kinda cool, because
now I can do things like,

21
00:00:52,143 --> 00:00:53,972
say, New Folder,

22
00:00:53,972 --> 00:00:58,492
and say, I'd like an
exercise, oh-five-oh-one,

23
00:00:58,492 --> 00:01:02,748
and then go into ex_05_01
and say File > New File.

24
00:01:02,748 --> 00:01:07,020
And then say, File > Save As.

25
00:01:07,020 --> 00:01:10,030
And put it in ex_05_01,

26
00:01:10,030 --> 00:01:14,673
and then name the file ex_05_01.py.

27
00:01:14,673 --> 00:01:16,821
I'm gonna start from scratch,

28
00:01:16,821 --> 00:01:21,228
on this one, instead of
adapting another piece of code.

29
00:01:21,228 --> 00:01:24,990
I'll say, print('Five'),

30
00:01:24,990 --> 00:01:26,588
and I'm gonna do this,

31
00:01:26,588 --> 00:01:28,341
because now I need to get to the point

32
00:01:28,341 --> 00:01:33,175
where I'm in the same folder
in this Terminal window.

33
00:01:33,175 --> 00:01:35,256
Let's see, Desktop,

34
00:01:35,256 --> 00:01:38,796
py4e,

35
00:01:38,796 --> 00:01:43,756
ex, I can string these together.

36
00:01:43,756 --> 00:01:49,365
And there I am, and I say python3, ex,

37
00:01:49,365 --> 00:01:51,238
and there I go, okay?

38
00:01:51,238 --> 00:01:52,973
So I'm in good shape.

39
00:01:52,973 --> 00:01:55,130
So, there's a couple things right now,

40
00:01:55,130 --> 00:01:57,936
and we're gonna do the
total count and average.

41
00:01:57,936 --> 00:01:59,822
And so this is just the basic pattern

42
00:01:59,822 --> 00:02:01,991
where we're going to have,

43
00:02:01,991 --> 00:02:05,684
we're gonna need a iteration
variable for the count,

44
00:02:05,684 --> 00:02:09,633
I'll call that num, we start that at 0.

45
00:02:09,633 --> 00:02:12,577
And then tot, and I'll start that at 0.0.

46
00:02:12,577 --> 00:02:15,371
So that's the running count
and the running total.

47
00:02:15,371 --> 00:02:16,667
Now we need to write a loop.

48
00:02:16,667 --> 00:02:19,176
And I'm gonna write this
as an infinite loop.

49
00:02:19,176 --> 00:02:25,228
while True, with colon,
and then I'll indent.

50
00:02:25,228 --> 00:02:26,952
And I'll prop first string,

51
00:02:26,952 --> 00:02:30,225
and remember, input gives us a string, so,

52
00:02:30,225 --> 00:02:37,525
I'm gonna call this sval = input,

53
00:02:37,525 --> 00:02:43,595
enter a number, colon, space.

54
00:02:43,595 --> 00:02:46,785
I'm gonna deal with the
try and except later,

55
00:02:46,785 --> 00:02:50,540
but you can just kinda know
that the floating point value

56
00:02:50,540 --> 00:02:53,263
that we're going to do is,

57
00:02:53,263 --> 00:02:57,280
sometimes this little bit of code,

58
00:02:57,280 --> 00:02:58,729
will fail,

59
00:02:58,729 --> 00:03:01,625
I'm just gonna take the
string value here, sval,

60
00:03:01,625 --> 00:03:03,754
as input returns us a string,

61
00:03:03,754 --> 00:03:06,557
and I'm gonna convert that to float.

62
00:03:06,557 --> 00:03:11,935
I'm gonna say print (fval),

63
00:03:11,935 --> 00:03:13,938
so I can print that out.

64
00:03:13,938 --> 00:03:18,192
And then I'm gonna do the,

65
00:03:18,192 --> 00:03:23,485
num = num + 1,

66
00:03:23,485 --> 00:03:32,065
and tot = tot + fval.

67
00:03:32,065 --> 00:03:35,856
Now, I do need to deal with the situation

68
00:03:35,856 --> 00:03:37,975
where I'm entering the word done.

69
00:03:37,975 --> 00:03:42,745
Now, we wanna check that before
we convert it to a float,

70
00:03:42,745 --> 00:03:45,264
because done, well, we can run this.

71
00:03:45,264 --> 00:03:48,995
It's an infinite loop, but
it'll only run a little bit.

72
00:03:48,995 --> 00:03:50,910
Won't cause us too much problem.

73
00:03:50,910 --> 00:03:55,507
If I run Python, lemme
drag this over here.

74
00:03:55,507 --> 00:03:56,340
And I go,

75
00:03:56,340 --> 00:03:57,650
1,

76
00:03:57,650 --> 00:03:58,927
2,

77
00:03:58,927 --> 00:04:00,486
3,

78
00:04:00,486 --> 00:04:02,575
and if I put in something bad,

79
00:04:02,575 --> 00:04:05,007
it's running, I don't
have a way to get out.

80
00:04:05,007 --> 00:04:06,204
But you can see that,

81
00:04:06,204 --> 00:04:08,407
you know, it blew up on line 5,

82
00:04:08,407 --> 00:04:10,289
it blew up right here on line 5.

83
00:04:10,289 --> 00:04:12,627
So what we wanna do is we want it to say,

84
00:04:12,627 --> 00:04:15,575
you know, 1, 2, 3, done.

85
00:04:15,575 --> 00:04:18,380
But we want it to detect
that we've typed in done.

86
00:04:18,380 --> 00:04:20,023
So here we'll just say,

87
00:04:20,023 --> 00:04:23,713
if the string value that
I got back from input

88
00:04:23,713 --> 00:04:28,510
is == 'done',

89
00:04:28,510 --> 00:04:31,029
break.

90
00:04:31,029 --> 00:04:34,101
So that basically will break us out.

91
00:04:34,101 --> 00:04:38,043
And now I,

92
00:04:38,043 --> 00:04:39,992
print ("ALL DONE").

93
00:04:39,992 --> 00:04:43,100
I should be using single quotes here.

94
00:04:43,100 --> 00:04:45,399
Too much Java coding.

95
00:04:45,399 --> 00:04:46,922
print ('ALL DONE'),

96
00:04:46,922 --> 00:04:50,676
then I'm gonna say print,

97
00:04:50,676 --> 00:04:51,823
what do I want to print?

98
00:04:51,823 --> 00:04:55,127
The total, the num,

99
00:04:55,127 --> 00:04:58,251
and then,

100
00:04:58,251 --> 00:04:59,932
tot comma num,

101
00:04:59,932 --> 00:05:01,861
comma,

102
00:05:01,861 --> 00:05:04,748
tot over num.

103
00:05:04,748 --> 00:05:06,815
Now we're, we gotta be careful,

104
00:05:06,815 --> 00:05:08,240
because we don't wanna divide by zero,

105
00:05:08,240 --> 00:05:10,343
but that'll get us sort of a ways.

106
00:05:10,343 --> 00:05:12,599
So this is gonna run, it's
gonna read these things,

107
00:05:12,599 --> 00:05:14,628
it's gonna cumulate here,

108
00:05:14,628 --> 00:05:15,912
this is the accumulator pattern,

109
00:05:15,912 --> 00:05:17,496
this is a counter pattern,

110
00:05:17,496 --> 00:05:19,212
where we're adding 1
to a current variable,

111
00:05:19,212 --> 00:05:25,179
and a cumular pattern where
we're adding a value to it.

112
00:05:25,179 --> 00:05:28,928
So now we should be able to see the done.

113
00:05:28,928 --> 00:05:31,784
Um, 4, 5, and 6,

114
00:05:31,784 --> 00:05:34,095
and then done,

115
00:05:34,095 --> 00:05:37,465
and the total of 4 plus 5 plus 6 is 15.0,

116
00:05:37,465 --> 00:05:40,219
the number is 3, and the average is 5.0.

117
00:05:40,219 --> 00:05:42,668
And so that's really good,
the ALL DONE prints out.

118
00:05:42,668 --> 00:05:44,159
I just did that for yocks,

119
00:05:44,159 --> 00:05:46,527
and you can see the
value that's coming up.

120
00:05:46,527 --> 00:05:47,698
So that's in pretty good shape,

121
00:05:47,698 --> 00:05:49,637
so I'm gonna comment this out,

122
00:05:49,637 --> 00:05:52,107
and comment that out.

123
00:05:52,107 --> 00:05:53,667
So this is pretty good,

124
00:05:53,667 --> 00:05:56,427
it works just the way we want it to work.

125
00:05:56,427 --> 00:06:01,594
4, 5, 6, but if we do something
other than the word done,

126
00:06:01,594 --> 00:06:04,351
then we're gonna blow up in this float.

127
00:06:04,351 --> 00:06:07,237
And so this is where we're
going to do a try and except,

128
00:06:07,237 --> 00:06:11,100
because we just know
that this line, line 7,

129
00:06:11,100 --> 00:06:14,996
line 7 is the danger zone, okay?

130
00:06:14,996 --> 00:06:15,829
So what we're going to do

131
00:06:15,829 --> 00:06:17,955
is we're going to put a try in here,

132
00:06:17,955 --> 00:06:19,447
and then we're going to indent

133
00:06:19,447 --> 00:06:21,924
the part of the code that seems strange,

134
00:06:21,924 --> 00:06:26,020
and then we're going to
have some except code.

135
00:06:26,020 --> 00:06:29,109
And the first thing we have
to do in the except code

136
00:06:29,109 --> 00:06:33,342
is print out the word Invalid input.

137
00:06:33,342 --> 00:06:37,420
Come back.

138
00:06:37,420 --> 00:06:41,385
print('Invalid input').

139
00:06:41,385 --> 00:06:42,646
Now,

140
00:06:42,646 --> 00:06:44,837
just like in an earlier example,

141
00:06:44,837 --> 00:06:47,104
we have to do something here to make sure

142
00:06:47,104 --> 00:06:48,609
it doesn't just keep on going,

143
00:06:48,609 --> 00:06:50,423
'cause fval doesn't work.

144
00:06:50,423 --> 00:06:51,956
We're not gonna see the error message

145
00:06:51,956 --> 00:06:54,036
that would be the
traceback here on line 9,

146
00:06:54,036 --> 00:06:56,401
we're gonna run here, but
we still don't wanna add,

147
00:06:56,401 --> 00:06:58,807
'cause fval will be, um.

148
00:06:58,807 --> 00:07:01,574
So this is where we can use the continue.

149
00:07:01,574 --> 00:07:04,210
So in this code, we're
using both the break,

150
00:07:04,210 --> 00:07:06,148
to say, if I'm all done, break,

151
00:07:06,148 --> 00:07:09,306
and if I have a problem,
I'll print a message out,

152
00:07:09,306 --> 00:07:10,786
and then I'll say continue.

153
00:07:10,786 --> 00:07:13,211
So the continue basically
says, go back to the top.

154
00:07:13,211 --> 00:07:17,442
So that is how, when we
see, enter some bad data,

155
00:07:17,442 --> 00:07:18,947
we print our invalid input,

156
00:07:18,947 --> 00:07:20,801
and without adding anything new,

157
00:07:20,801 --> 00:07:22,253
you don't really see it here,

158
00:07:22,253 --> 00:07:25,000
without adding anything new,
you go back up to the top

159
00:07:25,000 --> 00:07:26,529
and enter a second thing.

160
00:07:26,529 --> 00:07:31,095
So now, if everything is right,

161
00:07:31,095 --> 00:07:33,410
I should be able to type,

162
00:07:33,410 --> 00:07:35,420
bad input.

163
00:07:35,420 --> 00:07:38,050
4, 5, 6,

164
00:07:38,050 --> 00:07:41,747
bad input, bad input, done.

165
00:07:41,747 --> 00:07:45,471
And I have a total of 15, and 3 items,

166
00:07:45,471 --> 00:07:48,022
and the average is 5.0.

167
00:07:48,022 --> 00:07:49,808
So, there we go.

168
00:07:49,808 --> 00:07:51,967
That's what we're going to get,

169
00:07:51,967 --> 00:07:55,737
and that roughly achieves this same thing.

170
00:07:55,737 --> 00:07:59,270
And it's a combination of,

171
00:07:59,270 --> 00:08:03,204
a loop, with a exit mechanism,

172
00:08:03,204 --> 00:08:06,006
we have some sanity-checking of our input,

173
00:08:06,006 --> 00:08:08,776
some making sure that we
have some valid input,

174
00:08:08,776 --> 00:08:11,669
and we catch it, and we use
continue to loop back up

175
00:08:11,669 --> 00:08:13,578
to run the next iteration of the loop.

176
00:08:13,578 --> 00:08:15,433
Now we have an accumulator pattern,

177
00:08:15,433 --> 00:08:17,801
and then we can use the accumulated data

178
00:08:17,801 --> 00:08:20,867
to print what we want to print.

179
00:08:20,867 --> 00:08:23,994
So, I hope that this
has been useful to you.

180
00:08:23,994 --> 00:08:27,244
Exercise 5.1, for Python for Everybody.

