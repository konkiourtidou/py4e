1
00:00:00,163 --> 00:00:02,076
- [Charles] Hello and welcome
to Python for Everybody.

2
00:00:02,076 --> 00:00:03,022
My name is Charles Severance.

3
00:00:03,022 --> 00:00:04,191
I'm your instructor,

4
00:00:04,191 --> 00:00:06,092
and in this particular video,

5
00:00:06,092 --> 00:00:10,102
we are going to do exercise 7.1.

6
00:00:10,102 --> 00:00:12,298
And this, honestly, even though

7
00:00:12,298 --> 00:00:13,772
it's a really simple exercise,

8
00:00:13,772 --> 00:00:15,743
is one of my favorite
exercises in the book,

9
00:00:15,743 --> 00:00:18,384
because in chapters one through six,

10
00:00:18,384 --> 00:00:21,423
we've been just kind of
learning the basic mechanics.

11
00:00:21,423 --> 00:00:24,479
It's like we just, you know,

12
00:00:24,479 --> 00:00:27,324
it says, "Bonjour," and we say, "Bonjour."

13
00:00:27,324 --> 00:00:30,627
And it's, we're learning,
but it's not very fun,

14
00:00:30,627 --> 00:00:31,741
'cause we're not really solving it.

15
00:00:31,741 --> 00:00:33,390
So this is our first program

16
00:00:33,390 --> 00:00:35,706
that's gonna read a file
and do something with it.

17
00:00:35,706 --> 00:00:36,591
And the only thing we're gonna do

18
00:00:36,591 --> 00:00:37,952
is we're gonna convert it to uppercase.

19
00:00:37,952 --> 00:00:41,567
So it's just a really simple file, okay?

20
00:00:41,567 --> 00:00:42,930
So here we go.

21
00:00:42,930 --> 00:00:44,619
But the nice thing, so
this is important, though,

22
00:00:44,619 --> 00:00:46,264
I keep it simple, because
you gotta figure out

23
00:00:46,264 --> 00:00:47,565
how to manage files.

24
00:00:47,565 --> 00:00:49,159
And that's the payoff for everything

25
00:00:49,159 --> 00:00:51,448
that we've done up till now.

26
00:00:51,448 --> 00:00:57,146
So let's close that one
and say file, new folder.

27
00:00:57,146 --> 00:01:03,110
E-X-0-7-0-1, welcome to
files, here we are in files.

28
00:01:03,110 --> 00:01:05,244
File, new file.

29
00:01:05,244 --> 00:01:08,940
And I'm gonna say file, save as,

30
00:01:08,940 --> 00:01:14,607
and put it in E-X-0-7-0-1,
and I'm gonna call it,

31
00:01:14,607 --> 00:01:15,631
I could probably come up with

32
00:01:15,631 --> 00:01:18,197
a better naming convention
than these things,

33
00:01:18,197 --> 00:01:21,246
but it works for me, and I'm a programmer.

34
00:01:21,246 --> 00:01:27,355
And so here we have this file.

35
00:01:27,355 --> 00:01:33,103
Let's start up a shell,
a terminal program,

36
00:01:33,103 --> 00:01:37,584
command line in Windows, shell in Unix.

37
00:01:37,584 --> 00:01:40,900
Cd Desktop, cd python for everybody,

38
00:01:40,900 --> 00:01:42,056
folder in the desktop.

39
00:01:42,056 --> 00:01:49,479
Oh, py4e, cd_ex_07 +
tab to get me to that,

40
00:01:49,479 --> 00:01:50,547
in this working directory,

41
00:01:50,547 --> 00:01:52,014
and I have these files in there,

42
00:01:52,014 --> 00:01:57,933
and so I say, python three.

43
00:01:57,933 --> 00:02:03,090
Python three, ex_07.

44
00:02:03,090 --> 00:02:04,988
I saved this, so it's an empty file.

45
00:02:04,988 --> 00:02:07,174
Python's perfectly happy
running absolutely nothing,

46
00:02:07,174 --> 00:02:11,278
because I guess you've made no mistakes.

47
00:02:11,278 --> 00:02:12,485
Okay.

48
00:02:12,485 --> 00:02:15,269
Now, here's the key thing.

49
00:02:15,269 --> 00:02:19,474
We have, in this situation,
we've got to have this file.

50
00:02:19,474 --> 00:02:23,488
And this, this version of the
website has pythonlearn.com.

51
00:02:23,488 --> 00:02:25,986
This could also py4e.com,

52
00:02:25,986 --> 00:02:29,244
but what I'm gonna do is I'm
gonna control + click on this.

53
00:02:29,244 --> 00:02:33,542
Control + click, open
link in new tab, 'kay?

54
00:02:33,542 --> 00:02:37,362
So now I have this new
tab, and this is the file.

55
00:02:37,362 --> 00:02:39,969
Okay, and this is the file
that we're gonna read.

56
00:02:39,969 --> 00:02:42,470
We're gonna read this file, 'kay?

57
00:02:42,470 --> 00:02:43,863
Lots of stuff in this file.

58
00:02:43,863 --> 00:02:46,249
You're gonna get to know
this file really well.

59
00:02:46,249 --> 00:02:51,996
The key is, is we've got to put
this file in this directory,

60
00:02:51,996 --> 00:02:54,094
because this program is
running in this directory

61
00:02:54,094 --> 00:02:56,298
and this program needs to open the file.

62
00:02:56,298 --> 00:02:58,451
And this is where if you
got some magic little button

63
00:02:58,451 --> 00:03:01,792
and, you know, whatever, click run Python,

64
00:03:01,792 --> 00:03:03,836
it doesn't know what
directory it's running it in.

65
00:03:03,836 --> 00:03:05,734
That's, so we gotta get
this file in a directory

66
00:03:05,734 --> 00:03:07,548
so the program runs in the same directory

67
00:03:07,548 --> 00:03:10,406
so it can open the file
we're looking at, right?

68
00:03:10,406 --> 00:03:13,375
So here's the directory we wanna go to.

69
00:03:13,375 --> 00:03:15,993
And I'm gonna say, so I've
got this file sitting here,

70
00:03:15,993 --> 00:03:17,169
and this works for text files,

71
00:03:17,169 --> 00:03:19,235
once they're sort of
viewable in the browser.

72
00:03:19,235 --> 00:03:22,635
I'm gonna say file, save page as,

73
00:03:22,635 --> 00:03:27,554
and I'm going to go to my desktop.

74
00:03:27,554 --> 00:03:29,809
Make this a little bigger.

75
00:03:29,809 --> 00:03:34,116
Python for everybody, ex_07_01.

76
00:03:34,116 --> 00:03:35,408
And you'll see this is sitting here,

77
00:03:35,408 --> 00:03:38,435
and I'm just gonna say, save.

78
00:03:38,435 --> 00:03:42,456
So that's now been saved as
if I'd downloaded the file.

79
00:03:42,456 --> 00:03:46,416
So let's go into the
terminal and do an LS.

80
00:03:46,416 --> 00:03:49,473
And so you see that by my
action here in the browser,

81
00:03:49,473 --> 00:03:52,946
I have saved a file into
the exact same folder

82
00:03:52,946 --> 00:03:55,820
that I've got the code for 7-1.

83
00:03:55,820 --> 00:03:57,376
So now I can open this file

84
00:03:57,376 --> 00:04:00,871
and I can make sense of this file, okay?

85
00:04:00,871 --> 00:04:04,405
So I'm going to Atom, and you
see Atom even sees the file.

86
00:04:04,405 --> 00:04:06,627
So now I can even open the file in Atom.

87
00:04:06,627 --> 00:04:08,438
And here's the file in Atom.

88
00:04:08,438 --> 00:04:10,449
Atom knows how to read these text files.

89
00:04:10,449 --> 00:04:12,539
And so away we go.

90
00:04:12,539 --> 00:04:17,093
So now ex07.py.

91
00:04:17,093 --> 00:04:18,281
This next few lines of code

92
00:04:18,281 --> 00:04:19,958
you're gonna get to know pretty well.

93
00:04:19,958 --> 00:04:21,969
And so I'm gonna create a variable called,

94
00:04:21,969 --> 00:04:25,911
oh, come back, I was in the wrong place.

95
00:04:25,911 --> 00:04:28,348
I'm gonna open the file
with the open command,

96
00:04:28,348 --> 00:04:37,758
fh = open('nbox-short.txt').

97
00:04:37,758 --> 00:04:40,844
Now remember that open does
not actually read the file.

98
00:04:40,844 --> 00:04:42,867
It kinda gives us this little portal

99
00:04:42,867 --> 00:04:45,406
where we can take a look at the file.

100
00:04:45,406 --> 00:04:47,778
And so if I print fh, you might expect

101
00:04:47,778 --> 00:04:50,599
it will contain all this
data, but it doesn't.

102
00:04:50,599 --> 00:04:52,513
It just is a file handle.

103
00:04:52,513 --> 00:04:55,274
So let me run that.

104
00:04:55,274 --> 00:05:01,166
Python3 ex_07.py, okay.

105
00:05:01,166 --> 00:05:03,735
So it's, it knows some information.

106
00:05:03,735 --> 00:05:05,585
This, we'll learn later what objects are.

107
00:05:05,585 --> 00:05:09,068
This is a Python object that
has some information in it.

108
00:05:09,068 --> 00:05:10,382
But the information in this object

109
00:05:10,382 --> 00:05:14,109
is not actually the file data.

110
00:05:14,109 --> 00:05:17,431
To read the file, we're
gonna write a while loop.

111
00:05:17,431 --> 00:05:19,847
I mean a for loop,
sorry, not a while loop.

112
00:05:19,847 --> 00:05:24,634
So we're gonna say for lx,

113
00:05:24,634 --> 00:05:26,723
again that, line is a good name here,

114
00:05:26,723 --> 00:05:29,498
but I wanna use a non-mnemonic variable.

115
00:05:29,498 --> 00:05:40,766
For line in fh: and then
I'm just gonna say print lx.

116
00:05:40,766 --> 00:05:43,944
Okay, so this is gonna
loop through every line

117
00:05:43,944 --> 00:05:47,735
in the file and print it out.

118
00:05:47,735 --> 00:05:49,583
Gonna have to make this
a little bigger now,

119
00:05:49,583 --> 00:05:52,164
'cause it's gonna be very chatty.

120
00:05:52,164 --> 00:05:54,866
So that is just our loop to read through,

121
00:05:54,866 --> 00:05:57,406
maybe make this a little smaller.

122
00:05:57,406 --> 00:06:00,757
There we go.

123
00:06:00,757 --> 00:06:03,510
Oh boy, oh boy, oh boy.

124
00:06:03,510 --> 00:06:06,377
Missing parentheses in call to print.

125
00:06:06,377 --> 00:06:08,508
What am I doing wrong here?

126
00:06:08,508 --> 00:06:10,814
Well, problem is, is
I've been using Python 2

127
00:06:10,814 --> 00:06:16,188
for so, so long that when I'm
not drinkin' enough coffee,

128
00:06:16,188 --> 00:06:20,071
then I'm gonna talk Python 2.

129
00:06:20,071 --> 00:06:20,972
So the right way to do this,

130
00:06:20,972 --> 00:06:22,576
so let me just run this
in, ah, never mind.

131
00:06:22,576 --> 00:06:25,250
I won't run it in Python
2, I'll just fix it,

132
00:06:25,250 --> 00:06:28,837
'cause prints go in
parentheses in Python 3.

133
00:06:28,837 --> 00:06:33,147
And so I save it, and
now let's run it again.

134
00:06:33,147 --> 00:06:34,358
Okay, so there you go.

135
00:06:34,358 --> 00:06:38,249
Now, as we scroll through this,

136
00:06:38,249 --> 00:06:41,378
you see right away the problem that

137
00:06:41,378 --> 00:06:43,177
I'll get rid of that print
statement right there.

138
00:06:43,177 --> 00:06:45,934
Let's get rid of that
guy, just delete him.

139
00:06:45,934 --> 00:06:48,239
We know how that line works.

140
00:06:48,239 --> 00:06:49,817
But you see this extra space, remember?

141
00:06:49,817 --> 00:06:53,718
Because in the file, there is a new line.

142
00:06:53,718 --> 00:06:55,210
So if you go over here,

143
00:06:55,210 --> 00:06:56,948
let me make this wide, as well.

144
00:06:56,948 --> 00:06:58,432
There is a non-printing character

145
00:06:58,432 --> 00:07:00,371
at the end of every line
called the new line,

146
00:07:00,371 --> 00:07:03,856
which is the way in
files we store the fact

147
00:07:03,856 --> 00:07:05,672
that it goes back to the beginning.

148
00:07:05,672 --> 00:07:08,030
So it's like, character,
character, character,

149
00:07:08,030 --> 00:07:09,579
character, character, k-ch!

150
00:07:09,579 --> 00:07:13,338
Go back to the beginning,
that was a new line, you know?

151
00:07:13,338 --> 00:07:14,657
Character, character,
character, character,

152
00:07:14,657 --> 00:07:16,486
character, character, character,

153
00:07:16,486 --> 00:07:17,715
the next character's a three,

154
00:07:17,715 --> 00:07:18,851
the next character's a new line,

155
00:07:18,851 --> 00:07:21,027
and so it goes to the
beginning of the next line.

156
00:07:21,027 --> 00:07:24,145
So that's the new line, and print,

157
00:07:24,145 --> 00:07:26,840
the print statement
automatically adds a new line.

158
00:07:26,840 --> 00:07:30,068
And so in this case, we have
one new line from the file,

159
00:07:30,068 --> 00:07:35,389
and then we have another new
line that prints adding, 'kay?

160
00:07:35,389 --> 00:07:39,697
And, but that's okay.

161
00:07:39,697 --> 00:07:48,259
We can say ly = lx.strip,

162
00:07:48,259 --> 00:07:51,726
actually rstrip,

163
00:07:51,726 --> 00:07:54,071
to strip the characters
from the right-hand side,

164
00:07:54,071 --> 00:07:56,551
the non-printing characters
from the right-hand side.

165
00:07:56,551 --> 00:08:01,317
And then we'll print out ly.

166
00:08:01,317 --> 00:08:03,563
So I'll clear my screen
and run that again.

167
00:08:03,563 --> 00:08:05,075
So it does exactly the same thing,

168
00:08:05,075 --> 00:08:06,402
but you don't see all these blank lines.

169
00:08:06,402 --> 00:08:09,551
And so this, so ly's a different variable.

170
00:08:09,551 --> 00:08:13,833
I made a strip of it, and then I did,

171
00:08:13,833 --> 00:08:15,448
printed ly instead of lx.

172
00:08:15,448 --> 00:08:18,434
If I'd have printed lx, I'd
get these extra blank lines.

173
00:08:18,434 --> 00:08:21,348
And so this is a very common thing.

174
00:08:21,348 --> 00:08:22,926
You open a file, you loop through it,

175
00:08:22,926 --> 00:08:24,674
through all the lines in the file,

176
00:08:24,674 --> 00:08:26,631
and then you throw away
the non-printing characters

177
00:08:26,631 --> 00:08:29,090
at the end of the line.

178
00:08:29,090 --> 00:08:31,520
And then you do something with it.

179
00:08:31,520 --> 00:08:34,202
And so right now, we're just printing it.

180
00:08:34,202 --> 00:08:37,116
But what we're supposed
to do in our assignment

181
00:08:37,116 --> 00:08:41,525
is make it uppercase.

182
00:08:41,525 --> 00:08:47,652
And so let's just call, the upper method,

183
00:08:47,652 --> 00:08:51,511
to make 'em all uppercase,
see if that works.

184
00:08:51,511 --> 00:08:52,716
And there you go.

185
00:08:52,716 --> 00:08:54,531
And so now the line has been shouted,

186
00:08:54,531 --> 00:08:57,372
they're only one line and
everything is fine, right?

187
00:08:57,372 --> 00:09:01,485
So, it's been shouted, all uppercased,

188
00:09:01,485 --> 00:09:04,958
this little syntax here
is what's called a method.

189
00:09:04,958 --> 00:09:07,750
This is a string variable,
and upper is a method

190
00:09:07,750 --> 00:09:09,396
within the string variable

191
00:09:09,396 --> 00:09:12,066
that returns us an
uppercased version of that.

192
00:09:12,066 --> 00:09:14,385
And again, that's
object-oriented terminology,

193
00:09:14,385 --> 00:09:18,152
and we will learn about
that in a upcoming chapter,

194
00:09:18,152 --> 00:09:20,805
but for now we just sorta
type it and understand it,

195
00:09:20,805 --> 00:09:22,256
and later we'll understand better

196
00:09:22,256 --> 00:09:24,727
that there's a whole
series of things you can do

197
00:09:24,727 --> 00:09:28,932
after this dot for a variable in Python.

198
00:09:28,932 --> 00:09:36,493
And so there you have the exercise 7.1

199
00:09:36,493 --> 00:09:39,072
for the book Python for Everybody.

200
00:09:39,072 --> 00:09:40,492
I hope you found this useful.

201
00:09:40,492 --> 00:09:42,074
See you on the net.

