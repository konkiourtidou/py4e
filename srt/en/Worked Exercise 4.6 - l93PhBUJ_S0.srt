1
00:00:00,200 --> 00:00:02,227
- [Charles] Hello, and welcome
to Python for Everybody.

2
00:00:02,227 --> 00:00:04,188
This is another of our worked examples,

3
00:00:04,188 --> 00:00:06,230
and I'm your instructor,
Charles Severance.

4
00:00:06,230 --> 00:00:08,490
The example we're going to do right now

5
00:00:08,490 --> 00:00:12,469
is exercise 4.6 in chapter four.

6
00:00:12,469 --> 00:00:15,635
This is an exercise
where we're taking code

7
00:00:15,635 --> 00:00:17,330
that we've already written,

8
00:00:17,330 --> 00:00:20,234
and redoing it in a way,

9
00:00:20,234 --> 00:00:22,733
to prove that we can
do it with a function.

10
00:00:22,733 --> 00:00:24,191
So it's not like it's going
to do anything different.

11
00:00:24,191 --> 00:00:28,909
It's going to do exactly
the same as before,

12
00:00:28,909 --> 00:00:30,703
we're just going to do it a different way.

13
00:00:30,703 --> 00:00:33,881
So let's go ahead and start
up our text editor Atom.

14
00:00:33,881 --> 00:00:37,423
Show you a couple new features of this.

15
00:00:37,423 --> 00:00:41,214
It's already been opened,
let me open it again.

16
00:00:41,214 --> 00:00:45,819
I'm going to open, get a new window,

17
00:00:45,819 --> 00:00:48,066
and then I'm going to open,

18
00:00:48,066 --> 00:00:51,428
but what I'm going to do
is to open this folder,

19
00:00:51,428 --> 00:00:52,791
it's this folder right here,

20
00:00:52,791 --> 00:00:54,204
and I'm going to open that.

21
00:00:54,204 --> 00:00:55,409
So instead of opening a file,

22
00:00:55,409 --> 00:00:56,702
which is what I've been doing so far,

23
00:00:56,702 --> 00:00:58,206
I'm going to open a folder.

24
00:00:58,206 --> 00:01:00,186
So now you can see all
the folders that I have,

25
00:01:00,186 --> 00:01:01,956
and they're just exactly the same folders

26
00:01:01,956 --> 00:01:06,002
that I've been making under desktop PY4E,

27
00:01:06,002 --> 00:01:10,351
so I can go and look at
my previous assignments.

28
00:01:10,351 --> 00:01:14,253
The other thing I can do is
I can control click on this,

29
00:01:14,253 --> 00:01:21,125
and say New Folder, and I
can say EX, exercise 04 06.

30
00:01:21,125 --> 00:01:24,044
Again, I like the 04 and the
06 just so things line up

31
00:01:24,044 --> 00:01:25,828
when we get to chapters 10 and 11.

32
00:01:25,828 --> 00:01:28,702
That's why I'm naming my files this way.

33
00:01:28,702 --> 00:01:32,221
And I'm going to adapt the
code from exercise 3.1.

34
00:01:32,221 --> 00:01:34,426
We can do exercise 3.2, but it's longer.

35
00:01:34,426 --> 00:01:36,388
The difference between 3.1 and 3.2 was

36
00:01:36,388 --> 00:01:38,691
one uses try except and
the other one does not,

37
00:01:38,691 --> 00:01:40,855
so I'm going to start with this one.

38
00:01:40,855 --> 00:01:42,510
I always clean up and get rid of that.

39
00:01:42,510 --> 00:01:45,762
So here is our time and a
half for overtime logic,

40
00:01:45,762 --> 00:01:49,391
and I am going to say, File, Save As.

41
00:01:49,391 --> 00:01:51,806
So I'm making a copy of it,

42
00:01:51,806 --> 00:01:55,206
and I am going to put this

43
00:01:55,206 --> 00:01:57,438
in this folder exercise four six,

44
00:01:57,438 --> 00:02:06,405
and I'm going to make sure to
rename my file 04 06, okay?

45
00:02:06,405 --> 00:02:10,848
So now I've got exercise 04 06
which is this one right here.

46
00:02:10,848 --> 00:02:12,594
That's the file we've got, it's there.

47
00:02:12,594 --> 00:02:16,985
So let me pop up my terminal window.

48
00:02:16,985 --> 00:02:24,756
CD desktop, CD PY4E, CD EX 04,

49
00:02:24,756 --> 00:02:29,142
hit tab for 06 because
there was only one in 04,

50
00:02:29,142 --> 00:02:30,640
so I can see where I'm at.

51
00:02:30,640 --> 00:02:33,843
I have one file here, LS.

52
00:02:33,843 --> 00:02:36,268
Line SL gives extended information,

53
00:02:36,268 --> 00:02:41,861
and I can say Python3 EX 04 PY.

54
00:02:41,861 --> 00:02:44,822
10, 10, and away we go, okay?

55
00:02:44,822 --> 00:02:46,322
So this is this code.

56
00:02:46,322 --> 00:02:51,498
I'm going to get rid of
some of this logic here.

57
00:02:51,498 --> 00:02:54,324
These print statements,
which I commented out,

58
00:02:54,324 --> 00:02:56,540
just to make it a little more dense.

59
00:02:56,540 --> 00:03:01,277
Okay, so let me start by just
putting a function in here.

60
00:03:01,277 --> 00:03:03,677
Of course def is the keyword for function,

61
00:03:03,677 --> 00:03:09,245
and compute pay is the
name of the function,

62
00:03:09,245 --> 00:03:14,120
and it's supposed to take two parameters,

63
00:03:14,120 --> 00:03:19,555
hours and rate.

64
00:03:19,555 --> 00:03:21,735
And then you add a colon,

65
00:03:21,735 --> 00:03:24,485
and then we're indented, right?

66
00:03:24,485 --> 00:03:27,179
So the indent is to determine how long

67
00:03:27,179 --> 00:03:30,016
the function lasts, how many lines it is.

68
00:03:30,016 --> 00:03:34,752
I'm just going to say print

69
00:03:34,752 --> 00:03:39,046
In compute pay.

70
00:03:39,046 --> 00:03:42,125
Give myself a blank line,
I'm going to save that.

71
00:03:42,125 --> 00:03:50,028
Now, I'm going to run it now.

72
00:03:50,028 --> 00:03:50,861
I'm going to run it now,

73
00:03:50,861 --> 00:03:57,799
and you'll notice something real quick.

74
00:03:57,799 --> 00:04:00,162
This line never came out,

75
00:04:00,162 --> 00:04:04,444
and that's because the way this works

76
00:04:04,444 --> 00:04:06,998
is this simply defines the function,

77
00:04:06,998 --> 00:04:08,401
and then it continues running,

78
00:04:08,401 --> 00:04:10,047
but it doesn't run that code.

79
00:04:10,047 --> 00:04:11,397
And it ran this code,

80
00:04:11,397 --> 00:04:14,041
and then it did in this
case the else code,

81
00:04:14,041 --> 00:04:15,642
and then it did the print,

82
00:04:15,642 --> 00:04:17,896
but it never came up and
actually ran this code.

83
00:04:17,896 --> 00:04:20,505
We have to call the function, okay?

84
00:04:20,505 --> 00:04:22,040
We have to call the function

85
00:04:22,040 --> 00:04:24,342
before it's going to actually run.

86
00:04:24,342 --> 00:04:31,703
So now let's make a call, compute pay,

87
00:04:31,703 --> 00:04:33,736
and let's pass in our variables

88
00:04:33,736 --> 00:04:39,564
that we have in this main code, FH and FR.

89
00:04:39,564 --> 00:04:42,785
So the compute pay FH and FR,

90
00:04:42,785 --> 00:04:54,087
and then I'm going to
print out hours and rate.

91
00:04:54,087 --> 00:04:55,968
So now you'll see it's
going to do the input,

92
00:04:55,968 --> 00:04:57,590
the input, convert to floating,

93
00:04:57,590 --> 00:05:00,025
call the function, which is
going to run this one line,

94
00:05:00,025 --> 00:05:03,396
and then continue down here, all right?

95
00:05:03,396 --> 00:05:05,959
So now what it's going to do,

96
00:05:05,959 --> 00:05:08,790
is going to define this,
run this, run this,

97
00:05:08,790 --> 00:05:12,307
call compute pay which is
going to temporarily suspend,

98
00:05:12,307 --> 00:05:14,130
come in here, run this code,

99
00:05:14,130 --> 00:05:16,370
and FH is going to map to hours,

100
00:05:16,370 --> 00:05:18,909
and FR is going to map to rate,

101
00:05:18,909 --> 00:05:22,074
and then it's going to come back,

102
00:05:22,074 --> 00:05:23,950
and it's going to continue down here,

103
00:05:23,950 --> 00:05:26,057
running this code, and then finishing.

104
00:05:26,057 --> 00:05:29,002
Okay, so that's what's going to run.

105
00:05:29,002 --> 00:05:30,991
So this time we will see compute pay,

106
00:05:30,991 --> 00:05:34,224
and we will see the
number for hours and rate.

107
00:05:34,224 --> 00:05:39,973
So I'll run it again, 40
hours, 10 dollars an hour.

108
00:05:39,973 --> 00:05:42,137
Ah, we see a mistake.

109
00:05:42,137 --> 00:05:43,637
I'm like, "And then you're going to see

110
00:05:43,637 --> 00:05:45,848
"the word compute pay here."

111
00:05:45,848 --> 00:05:48,009
And I'm like, "Okay, that didn't happen.

112
00:05:48,009 --> 00:05:49,679
"What's going wrong?"

113
00:05:49,679 --> 00:05:51,442
Let's take a look at what's going wrong.

114
00:05:51,442 --> 00:05:55,114
I don't plan to make these
mistakes, I just make them.

115
00:05:55,114 --> 00:05:56,691
Let me show you what's wrong here.

116
00:05:56,691 --> 00:05:58,523
See this little blue dot?

117
00:05:58,523 --> 00:06:00,401
That's what's wrong with my code.

118
00:06:00,401 --> 00:06:03,296
And if you don't catch
that, then you'll say,

119
00:06:03,296 --> 00:06:05,396
"Oh, I'm crazy."

120
00:06:05,396 --> 00:06:07,938
Well, I'm not crazy,
I just made a mistake.

121
00:06:07,938 --> 00:06:09,574
I forgot to save it.

122
00:06:09,574 --> 00:06:12,644
File, Save, or Command S.

123
00:06:12,644 --> 00:06:14,061
So now I saved it.

124
00:06:14,061 --> 00:06:15,683
I didn't change a single line of code.

125
00:06:15,683 --> 00:06:17,979
It was right, I forgot to save it.

126
00:06:17,979 --> 00:06:20,268
So I'm going to run it again now.

127
00:06:20,268 --> 00:06:22,724
40 hours, 10 dollars.

128
00:06:22,724 --> 00:06:25,767
And look, now I see this line.

129
00:06:25,767 --> 00:06:27,848
So it came into compute
pay, and then came back

130
00:06:27,848 --> 00:06:32,665
and then finished this part
and did compute pay, okay?

131
00:06:32,665 --> 00:06:36,453
Now, this isn't enough.

132
00:06:36,453 --> 00:06:39,125
What I need to do is I
need to move this code,

133
00:06:39,125 --> 00:06:41,178
the actual pay computations,

134
00:06:41,178 --> 00:06:45,573
so I'm going to cut that and
I'm going to put it in here.

135
00:06:45,573 --> 00:06:48,460
But now this variable FH
belongs to the main program.

136
00:06:48,460 --> 00:06:49,635
It doesn't belong to this code,

137
00:06:49,635 --> 00:06:51,046
and I don't want to use that.

138
00:06:51,046 --> 00:06:53,167
So I want to say hours,

139
00:06:53,167 --> 00:06:55,740
so I'm taking whatever
hours are being passed in,

140
00:06:55,740 --> 00:06:58,750
and then using rate,

141
00:06:58,750 --> 00:07:02,166
and I'm just changing all of these

142
00:07:02,166 --> 00:07:05,829
to match the parameters
inside the function.

143
00:07:05,829 --> 00:07:12,615
This is hours, and this is rate,

144
00:07:12,615 --> 00:07:19,830
and this is hours, and this is rate.

145
00:07:19,830 --> 00:07:25,953
Now I'm going to print a
print statement inside.

146
00:07:25,953 --> 00:07:32,079
I'm going to say returning,
and then I'm going to print XP.

147
00:07:32,079 --> 00:07:34,785
And then, still inside the function,

148
00:07:34,785 --> 00:07:36,950
I want to return a value
from this function,

149
00:07:36,950 --> 00:07:40,245
so I'm saying the returned
value for this function

150
00:07:40,245 --> 00:07:43,886
is actually in the current
function variable XP.

151
00:07:43,886 --> 00:07:48,413
And then I'm going to not call this XP,

152
00:07:48,413 --> 00:07:51,950
I'm going to call this pay in here.

153
00:07:51,950 --> 00:07:57,090
Not with a capital, I don't
want it to be capitalized.

154
00:07:57,090 --> 00:08:04,714
Pay, and pay, and pay.

155
00:08:04,714 --> 00:08:06,421
So it's returning pay.

156
00:08:06,421 --> 00:08:10,053
And then in here I'm going
to say XP equals compute pay.

157
00:08:10,053 --> 00:08:13,407
So what we've achieved here is,

158
00:08:13,407 --> 00:08:14,658
let me get rid of that,

159
00:08:14,658 --> 00:08:17,240
what we've achieved here is,

160
00:08:17,240 --> 00:08:19,626
it's going to come down
to find a function,

161
00:08:19,626 --> 00:08:22,510
then read the input, convert
it to floating point,

162
00:08:22,510 --> 00:08:27,369
and then call compute pay,
passing in FH as hours,

163
00:08:27,369 --> 00:08:31,848
and FR as rate, right?

164
00:08:31,848 --> 00:08:34,181
And then it's going to
take hours and rate,

165
00:08:34,181 --> 00:08:36,023
do whatever it does with the if then else,

166
00:08:36,023 --> 00:08:37,075
it's going to print these things,

167
00:08:37,075 --> 00:08:38,126
and then it's going to return it,

168
00:08:38,126 --> 00:08:40,933
and whatever this pay variable is,

169
00:08:40,933 --> 00:08:44,637
effectively goes back into this expression

170
00:08:44,637 --> 00:08:48,976
as the return value, and
then gets assigned into XP.

171
00:08:48,976 --> 00:08:51,719
Okay, so that's basically
what's going to happen,

172
00:08:51,719 --> 00:08:52,968
and then we'll print.

173
00:08:52,968 --> 00:08:56,547
It'll come back, and then print XP, okay?

174
00:08:56,547 --> 00:08:58,913
So let's go ahead and run.

175
00:08:58,913 --> 00:09:00,746
Oh, wait, I almost did it again.

176
00:09:00,746 --> 00:09:02,116
Look at the little blue dot.

177
00:09:02,116 --> 00:09:03,657
You guys can watch the blue dot,

178
00:09:03,657 --> 00:09:05,470
and when I forget to save it,

179
00:09:05,470 --> 00:09:08,512
and when I then run it, it'll blow up.

180
00:09:08,512 --> 00:09:14,444
So, 10 hours, 15 dollars an hour.

181
00:09:14,444 --> 00:09:15,570
So now it worked.

182
00:09:15,570 --> 00:09:17,906
So you can see these two print statements

183
00:09:17,906 --> 00:09:19,872
come from while this is running.

184
00:09:19,872 --> 00:09:22,182
The input happens, it calls the function,

185
00:09:22,182 --> 00:09:24,368
and then it prints off the pay.

186
00:09:24,368 --> 00:09:27,736
And now to finish this to get it right,

187
00:09:27,736 --> 00:09:29,628
I will simply comment out my little

188
00:09:29,628 --> 00:09:31,794
helpful debugging print statements,

189
00:09:31,794 --> 00:09:34,485
and run it one more time.

190
00:09:34,485 --> 00:09:38,085
40 hours, 10 dollars an hour.

191
00:09:38,085 --> 00:09:43,799
And run it again, and have it be 50 hours,

192
00:09:43,799 --> 00:09:46,788
and 10 dollars an hour, so 550.

193
00:09:46,788 --> 00:09:51,163
So that one is now working,
so that one is completed,

194
00:09:51,163 --> 00:09:57,333
and we have moved our computation
inside of the function.

195
00:09:57,333 --> 00:10:00,869
So I hope that you find this useful.

196
00:10:00,869 --> 00:10:03,247
I hope that you find this
entire course useful,

197
00:10:03,247 --> 00:10:05,247
and thanks for watching.

