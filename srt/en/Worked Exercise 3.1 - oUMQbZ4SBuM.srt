1
00:00:02,924 --> 00:00:04,774
- [Narrator] Hello everyone, welcome to

2
00:00:04,774 --> 00:00:07,095
Python for Everybody,
I'm Charles Severance,

3
00:00:07,095 --> 00:00:08,835
I'm the instructor for the class,

4
00:00:08,835 --> 00:00:14,780
and right now, I want
to go do Exercise 3.1,

5
00:00:14,780 --> 00:00:17,083
rewrite the pay computation that we did

6
00:00:17,083 --> 00:00:18,504
earlier in the previous chapter,

7
00:00:18,504 --> 00:00:21,673
and give the employee one and
a half times the hourly rate.

8
00:00:21,673 --> 00:00:24,683
This is rather simple, it's a
very classic computer problem,

9
00:00:24,683 --> 00:00:26,605
'cause it gives us our if-then-else,

10
00:00:26,605 --> 00:00:28,779
and there's a lot of
different ways to write it.

11
00:00:28,779 --> 00:00:30,123
So we're just gonna do enter the hours

12
00:00:30,123 --> 00:00:33,489
and the rate and do the pay.

13
00:00:33,489 --> 00:00:38,865
And so, I'm gonna start
by going to my terminal,

14
00:00:38,865 --> 00:00:43,999
cd into my Desktop, cd
Python for Everybody, and so

15
00:00:43,999 --> 00:00:49,505
here we go, let me go into
Atom, and get things started.

16
00:00:49,505 --> 00:00:52,179
I've already got this
folder, I mean this file

17
00:00:52,179 --> 00:00:55,987
from the last one, assignment
2.3, and I'm just gonna

18
00:00:55,987 --> 00:00:59,501
Save As, so I'm gonna duplicate this file,

19
00:00:59,501 --> 00:01:03,741
and I am going to go up to py4e,

20
00:01:03,741 --> 00:01:06,381
and then I'm gonna make a new folder,

21
00:01:06,381 --> 00:01:11,766
I'm gonna call that folder
ex_03_01 for Exercise 3.1.

22
00:01:11,766 --> 00:01:17,713
And then I'm gonna call this ex_03_01.py.

23
00:01:17,713 --> 00:01:21,893
Now that's just the
same files I had before,

24
00:01:21,893 --> 00:01:26,117
if I do an ls, you'll see
I've got the new folder,

25
00:01:26,117 --> 00:01:30,303
so I cd into the ex_03_01 folder,

26
00:01:30,303 --> 00:01:31,976
so that's the folder that I'm in,

27
00:01:31,976 --> 00:01:33,999
all the way down into this folder,

28
00:01:33,999 --> 00:01:36,204
and I do an ls, and I see this file,

29
00:01:36,204 --> 00:01:41,176
and so life is good,
and I can say python3,

30
00:01:41,176 --> 00:01:47,286
ex_03_01.py, I'll just
put in 10 10, so it's 100.

31
00:01:47,286 --> 00:01:49,494
Now the thing is, is that
we're supposed to give

32
00:01:49,494 --> 00:01:50,790
time and a half for overtime,

33
00:01:50,790 --> 00:01:53,144
so that means if there's
more than 40 hours,

34
00:01:53,144 --> 00:01:56,397
10 and 50, it's not supposed to be 500,

35
00:01:56,397 --> 00:02:01,169
it's supposed to be 500
plus half of 10 extra hours,

36
00:02:01,169 --> 00:02:03,670
'cause the 10 extra hours
are the 10 above 50,

37
00:02:03,670 --> 00:02:07,773
so that should be, I don't
know, we'll figure it out.

38
00:02:07,773 --> 00:02:09,235
It's easier to run a computer.

39
00:02:09,235 --> 00:02:12,698
Okay, so this is the code we've got.

40
00:02:12,698 --> 00:02:17,128
So, what I'm gonna do is change this,

41
00:02:17,128 --> 00:02:19,921
I'm gonna make a new variable called ar,

42
00:02:19,921 --> 00:02:23,188
I'll call it fr, stands
for floating point rate,

43
00:02:23,188 --> 00:02:27,201
and floating point rate
is going to be the float

44
00:02:27,201 --> 00:02:31,848
of the string rate, let me just call this,

45
00:02:31,848 --> 00:02:38,531
sh for string hours
and sr for string rate,

46
00:02:38,531 --> 00:02:43,026
and sr, so my variable is
fr for floating point rate,

47
00:02:43,026 --> 00:02:45,474
just so I can keep them
straight in my head,

48
00:02:45,474 --> 00:02:50,980
sh is string hours,
and so now I wanna say,

49
00:02:50,980 --> 00:03:01,907
floating point hours is equal
to float of string hours.

50
00:03:01,907 --> 00:03:08,176
And now I can change this so
I just enter in fh times fr.

51
00:03:08,176 --> 00:03:14,668
So I split this out, I can
even, like, print (fh, fr).

52
00:03:14,668 --> 00:03:16,291
It's perfectly fine
when you're writing this

53
00:03:16,291 --> 00:03:19,837
to add extra print statements
just for your own sanity.

54
00:03:19,837 --> 00:03:22,519
So now we're gonna read the two values,

55
00:03:22,519 --> 00:03:24,734
we're gonna convert 'em
to floating point numbers,

56
00:03:24,734 --> 00:03:26,608
we're gonna print those
floating point numbers out,

57
00:03:26,608 --> 00:03:28,078
we're gonna multiply 'em, and then

58
00:03:28,078 --> 00:03:30,049
we're gonna have the pays.

59
00:03:30,049 --> 00:03:32,431
And then I save it, always
remember to save it, right,

60
00:03:32,431 --> 00:03:34,110
so it has this little dot up here,

61
00:03:34,110 --> 00:03:36,193
all editors give you
some thing that tells you

62
00:03:36,193 --> 00:03:39,906
you didn't save it, so
I always keep saving it,

63
00:03:39,906 --> 00:03:42,964
because if you come down here and

64
00:03:42,964 --> 00:03:47,674
you run it, and it's
like, it didn't change,

65
00:03:47,674 --> 00:03:49,680
well, that's because you forgot.

66
00:03:49,680 --> 00:03:53,525
So let's do our 10 and 50 hours,

67
00:03:53,525 --> 00:03:55,580
so we see this extra print
statement that came out,

68
00:03:55,580 --> 00:03:58,666
that's that extra print
statement right there,

69
00:03:58,666 --> 00:03:59,843
let me make this a little smaller

70
00:03:59,843 --> 00:04:02,804
and let's move this over here,

71
00:04:02,804 --> 00:04:08,247
so we can see it a little better.

72
00:04:08,247 --> 00:04:09,691
Yeah, make it a little bigger,

73
00:04:09,691 --> 00:04:11,232
so we can see a little better,

74
00:04:11,232 --> 00:04:13,388
so that print statement's there.

75
00:04:13,388 --> 00:04:16,481
Just for yuks, I'm gonna comment that out,

76
00:04:16,481 --> 00:04:19,029
and so commenting things out
is a good way to keep stuff in

77
00:04:19,029 --> 00:04:21,873
that you might wanna kind of turn back on,

78
00:04:21,873 --> 00:04:23,412
it's a way of thinking
about it, I don't want

79
00:04:23,412 --> 00:04:25,418
this line to run, but
I'm just keeping it here.

80
00:04:25,418 --> 00:04:27,139
Comments are usually for
users to read, but they're

81
00:04:27,139 --> 00:04:35,951
also a way to tell the computer
to ignore what we're doing.

82
00:04:35,951 --> 00:04:39,097
So, the problem here is this calculation,

83
00:04:39,097 --> 00:04:42,772
that is not time and a half for overtime,

84
00:04:42,772 --> 00:04:45,979
so the way we're gonna solve
this is with an if statement.

85
00:04:45,979 --> 00:04:50,276
If the floating point hours, fr,

86
00:04:50,276 --> 00:04:54,176
is greater than 40, we should,

87
00:04:54,176 --> 00:05:03,294
I'll say, print overtime, and then,

88
00:05:03,294 --> 00:05:06,312
else, colon, the if and the else

89
00:05:06,312 --> 00:05:10,986
have to line up, print regular.

90
00:05:10,986 --> 00:05:13,869
So, I'm not gonna do anything different,

91
00:05:13,869 --> 00:05:17,589
I'm just gonna print the words
regular and overtime, OK?

92
00:05:17,589 --> 00:05:19,637
And I just save that, I'll do it so fast,

93
00:05:19,637 --> 00:05:22,187
you watch the little blue
dot happen and then go away,

94
00:05:22,187 --> 00:05:24,402
that's 'cause I hit Command+S to save it,

95
00:05:24,402 --> 00:05:27,913
because I've done this way too many times.

96
00:05:27,913 --> 00:05:31,975
So I'm gonna run it,
I'm gonna say, oh wait,

97
00:05:31,975 --> 00:05:35,555
hours is 10 hours, $10 an hour,

98
00:05:35,555 --> 00:05:38,278
it's regular pay, if I do it this way,

99
00:05:38,278 --> 00:05:45,384
I can do 50 hours at $10 an hour.

100
00:05:45,384 --> 00:05:50,274
That's not good, what'd I do wrong?

101
00:05:50,274 --> 00:05:54,579
fr is greater than 40,
what did I do wrong,

102
00:05:54,579 --> 00:05:58,953
it's still saying for 50
hours, something's wrong here.

103
00:05:58,953 --> 00:06:06,544
It's saying it's regular,
if fr is greater than,

104
00:06:06,544 --> 00:06:14,195
oh, that's 'cause I just
messed my program up.

105
00:06:14,195 --> 00:06:22,303
So look, I called this
variable sh, and this sr,

106
00:06:22,303 --> 00:06:24,943
and then I get the floating
point for the hours

107
00:06:24,943 --> 00:06:29,285
but look, I'm checking if the
rate, fr, that's the mistake.

108
00:06:29,285 --> 00:06:32,229
So it's really I've got to look for fh,

109
00:06:32,229 --> 00:06:34,633
that's a logic error, it's
a perfectly fine program,

110
00:06:34,633 --> 00:06:36,815
Python's perfectly happy with that,

111
00:06:36,815 --> 00:06:38,362
and I was messin' up, I kept puttin',

112
00:06:38,362 --> 00:06:42,730
see, I was typin' the rate in, I was just

113
00:06:42,730 --> 00:06:45,338
typin' it backwards, I
was crazy, and again,

114
00:06:45,338 --> 00:06:47,643
that can be the kind of mistake

115
00:06:47,643 --> 00:06:50,631
that you run into, I mean I
didn't do that on purpose.

116
00:06:50,631 --> 00:06:52,763
I did it, 'cause I haven't
drank enough coffee yet

117
00:06:52,763 --> 00:06:55,335
this morning, hang on,
lemme get some coffee.

118
00:06:55,335 --> 00:06:56,401
(sips coffee)

119
00:06:56,401 --> 00:06:59,805
I have more coffee, I'm
still gonna make mistakes.

120
00:06:59,805 --> 00:07:02,982
So now, there's no little blue dots,

121
00:07:02,982 --> 00:07:06,035
so it should work better now.

122
00:07:06,035 --> 00:07:10,269
Python, run it, so, 10 hours, $10,

123
00:07:10,269 --> 00:07:19,045
is regular pay, run it, 50 hours, $10,

124
00:07:19,045 --> 00:07:21,839
I did it wrong again, I
told you what I wanted

125
00:07:21,839 --> 00:07:26,909
to change and then I didn't change it, fh.

126
00:07:26,909 --> 00:07:30,372
I'm like, crazy, again, you can

127
00:07:30,372 --> 00:07:32,622
be crazy, too, can you look right at it?

128
00:07:32,622 --> 00:07:35,457
I looked right at it,
I did the wrong thing.

129
00:07:35,457 --> 00:07:38,765
Hooray, it says overtime, and
now you'll notice, I'm not

130
00:07:38,765 --> 00:07:41,726
being silly here, where I
put this print statement in,

131
00:07:41,726 --> 00:07:45,099
and it's so tempting for a programmer

132
00:07:45,099 --> 00:07:52,106
to just immediately try to bam, finish it,

133
00:07:52,106 --> 00:07:53,527
and I don't know why I did it this way.

134
00:07:53,527 --> 00:07:55,791
Maybe 'cause I know that I'm flawed,

135
00:07:55,791 --> 00:07:57,414
and I know that I make dumb mistakes

136
00:07:57,414 --> 00:07:59,887
like that, and what can I do?

137
00:07:59,887 --> 00:08:02,980
So I was just being really careful there.

138
00:08:02,980 --> 00:08:06,700
Now I know, let's just be sure, if it's

139
00:08:06,700 --> 00:08:11,046
under 40 hours, it's gonna
be a regular computation,

140
00:08:11,046 --> 00:08:12,349
and I'm gonna leave these print statements

141
00:08:12,349 --> 00:08:15,567
right in here for a
while, 'cause whatever.

142
00:08:15,567 --> 00:08:18,862
So, here's the interesting thing,

143
00:08:18,862 --> 00:08:20,457
so I'm just gonna indent this,

144
00:08:20,457 --> 00:08:22,422
'cause the regular pay is to take

145
00:08:22,422 --> 00:08:25,779
the number of rate the
hours times the rate, OK?

146
00:08:25,779 --> 00:08:28,489
And now I gotta come up with a slightly

147
00:08:28,489 --> 00:08:32,091
different pay, xp is equal to,

148
00:08:32,091 --> 00:08:33,553
and so there's a couple ways to do this.

149
00:08:33,553 --> 00:08:36,514
We can say, time and a
half can be calculated

150
00:08:36,514 --> 00:08:42,964
by saying the number,
the rate times the hours,

151
00:08:42,964 --> 00:08:45,848
let's do it this way,
let's call it regular,

152
00:08:45,848 --> 00:08:50,653
the regular pay is the
rate times the hours,

153
00:08:50,653 --> 00:08:55,113
fr times fh, and then the overtime pay

154
00:08:55,113 --> 00:08:58,032
is equal to the, now we know that we have

155
00:08:58,032 --> 00:09:01,381
more than 40 hours, 'cause
we couldn't do this in here,

156
00:09:01,381 --> 00:09:03,897
so if I say the number of hours

157
00:09:03,897 --> 00:09:09,488
that you've worked, fh minus 40.0,

158
00:09:09,488 --> 00:09:13,345
that is the number of hours above 40.

159
00:09:13,345 --> 00:09:17,316
So if this is 50, then the
fh minus 40 is gonna be 10.

160
00:09:17,316 --> 00:09:21,419
And then I'm gonna multiply
that times the rate, fr,

161
00:09:21,419 --> 00:09:24,546
except you get one and
a half times, right,

162
00:09:24,546 --> 00:09:28,893
so your overtime pay is the excess hours

163
00:09:28,893 --> 00:09:32,982
times one and a half times the rate.

164
00:09:32,982 --> 00:09:36,368
Actually, no, see, I see
I made a mistake already,

165
00:09:36,368 --> 00:09:39,467
the extra overtime pay, 'cause
you're gonna get all your

166
00:09:39,467 --> 00:09:44,692
regular pay, so the 50 percent,
or the half, is the extra.

167
00:09:44,692 --> 00:09:49,264
And see I'm confused, so
I'm just gonna print out

168
00:09:49,264 --> 00:09:52,772
reg, otp, and if those numbers are right,

169
00:09:52,772 --> 00:09:59,402
I can do xp which is the
pay is equal to reg + otp.

170
00:09:59,402 --> 00:10:02,830
See, my program is, I have
to make it a little smaller,

171
00:10:02,830 --> 00:10:05,331
let's make it so you
can see the whole thing.

172
00:10:05,331 --> 00:10:08,214
So I think I got this right, I figure that

173
00:10:08,214 --> 00:10:10,346
the regular hours, which
is giving you the base rate

174
00:10:10,346 --> 00:10:13,766
for all 50 hours or 45 hours,
or whatever, figuring out

175
00:10:13,766 --> 00:10:17,068
the excess hours, and
this is the bonus amount.

176
00:10:17,068 --> 00:10:19,701
There's lots of different ways
that you can calculate this.

177
00:10:19,701 --> 00:10:22,711
But in general, we have an
if statement on this side,

178
00:10:22,711 --> 00:10:26,688
and this else is the easy one,
and that's 40 hours or less,

179
00:10:26,688 --> 00:10:28,478
so if we're doing greater than 40.

180
00:10:28,478 --> 00:10:32,414
So I just hit Command+S to save it,

181
00:10:32,414 --> 00:10:37,750
and so let me clear my
screen with Command+K,

182
00:10:37,750 --> 00:10:40,662
so I'm gonna do 10 hours at $10 an hour

183
00:10:40,662 --> 00:10:45,557
and that's a regular
calculation, and it's $100.

184
00:10:45,557 --> 00:10:49,718
And so if I do 50 hours at $10 an hour,

185
00:10:49,718 --> 00:10:53,061
so my regular pay was 50 times 10,

186
00:10:53,061 --> 00:10:55,367
and then the excess pay is $5 an hour

187
00:10:55,367 --> 00:10:57,952
times the extra 10 hours, which is $50,

188
00:10:57,952 --> 00:11:01,671
and so my pay is $550,
and so it looks like

189
00:11:01,671 --> 00:11:04,757
I've got this calculation right.

190
00:11:04,757 --> 00:11:07,599
And so, here's the
thing, I've been putting

191
00:11:07,599 --> 00:11:09,654
these extra print statements in,

192
00:11:09,654 --> 00:11:11,201
it's a real common thing for a programmer,

193
00:11:11,201 --> 00:11:14,377
and you can look on GitHub
and see code that I write,

194
00:11:14,377 --> 00:11:16,927
and I just leave these
in, because you know

195
00:11:16,927 --> 00:11:19,184
that could be broken, but
you're not supposed to

196
00:11:19,184 --> 00:11:21,023
print this extra stuff
out, and if you do this

197
00:11:21,023 --> 00:11:22,653
in the auto-grader, it's gonna complain

198
00:11:22,653 --> 00:11:26,916
about these extra things, it's
gonna consider you broken.

199
00:11:26,916 --> 00:11:29,661
And again, so I comment those
out to do one final test,

200
00:11:29,661 --> 00:11:33,346
and notice the little blue
dot, so I have to save it,

201
00:11:33,346 --> 00:11:35,735
and now I can run it one more time.

202
00:11:35,735 --> 00:11:38,333
And I do 10 hours, $10, and it prints out

203
00:11:38,333 --> 00:11:40,214
exactly what I wanna see and not

204
00:11:40,214 --> 00:11:44,261
the extra stuff, 'cause
I commented 'em out.

205
00:11:44,261 --> 00:11:48,364
And I do 50 hours and $10 an hour is $550.

206
00:11:48,364 --> 00:11:51,220
So I've got it right, and at that point,

207
00:11:51,220 --> 00:11:54,104
you should be able to go back
and go to your auto-grader,

208
00:11:54,104 --> 00:11:57,692
if this was in the auto-grader,
and paste the stuff in, OK?

209
00:11:57,692 --> 00:12:02,651
So, I hope this exercise 3.1 was useful,

210
00:12:02,651 --> 00:12:04,651
and thanks for watching.

