1
00:00:00,857 --> 00:00:02,328
- Ahora vamos a empezar a aprender

2
00:00:02,328 --> 00:00:05,367
efectivamente el lenguaje Python.

3
00:00:05,367 --> 00:00:07,257
Qué decimos?

4
00:00:07,257 --> 00:00:09,410
Puedes pensarlo casi
como escribir,

5
00:00:09,410 --> 00:00:11,767
casi como escribir una historia.

6
00:00:11,767 --> 00:00:13,733
Vamos a empezar
con el vocabulario básico.

7
00:00:13,733 --> 00:00:17,072
Vamos a hablar un poquito
acerca de las líneas y las oraciones.

8
00:00:17,072 --> 00:00:18,788
Luego vamos a 
empezar a hablar de

9
00:00:18,788 --> 00:00:20,860
cómo unir esas oraciones

10
00:00:20,860 --> 00:00:25,026
para armar un párrafo coherente, por decirlo así.

11
00:00:25,026 --> 00:00:27,648
Solo tienes que aceptar
el hecho de que cuando te empiece

12
00:00:27,648 --> 00:00:30,662
a enseñar esta cosa,
no va a tener sentido

13
00:00:30,662 --> 00:00:33,861
por aproximadamente seis o siete capítulos más.

14
00:00:33,861 --> 00:00:37,661
Asi que solo tengan un poco de paciencia.

15
00:00:37,661 --> 00:00:40,834
Recuerdo la primera vez que
aprendi, fui de,

16
00:00:40,834 --> 00:00:43,874
confundido, confundido,
confundido, confundido, confundido.

17
00:00:43,874 --> 00:00:46,422
Santa caballa, esto es increible.

18
00:00:46,422 --> 00:00:49,378
Espero que muchos de ustedes
pasen por lo mismo.

19
00:00:49,378 --> 00:00:52,361
Solo aprende las primeras
partes, acepta el hecho de

20
00:00:52,361 --> 00:00:57,928
que no necesariamente 
tenga sentido en un sentido amplio.

21
00:00:57,928 --> 00:01:00,019
Simplemente ténganos paciencia, ok?

22
00:01:00,019 --> 00:01:01,349
Así que empezaremos con
vocabulario, empezaremos

23
00:01:01,349 --> 00:01:03,234
a armar sentencias, luego tendremos

24
00:01:03,234 --> 00:01:06,522
historias cortas y parrafos.

25
00:01:06,522 --> 00:01:08,620
Esta es una historia corta sobre

26
00:01:08,620 --> 00:01:10,915
cómo contar palabras en Python.

27
00:01:10,915 --> 00:01:13,453
Tiene un par de
párrafos, y vamos a

28
00:01:13,453 --> 00:01:16,564
ver todo eso eventualmente.

29
00:01:16,564 --> 00:01:20,069
Vamos a empezar con un conjunto de palabras reservadas.

30
00:01:20,069 --> 00:01:21,998
Qué son las palabras reservadas?

31
00:01:21,998 --> 00:01:27,802
Son palabras que Python
espera que cuando las uses,

32
00:01:27,802 --> 00:01:28,806
van a significar exactamente

33
00:01:28,806 --> 00:01:30,709
lo que Python espera que signifiquen.

34
00:01:30,709 --> 00:01:32,812
Lo que en verdad significa
es que no tienes permitido usarlas 

35
00:01:32,812 --> 00:01:35,275
para cualquier propósito que
no sea el propósito que Python quiere.

36
00:01:35,275 --> 00:01:37,295
Es parte del contrato.

37
00:01:37,295 --> 00:01:41,115
Es como cuando tienes un perro, y le dices,

38
00:01:41,115 --> 00:01:44,409
qué te pareció
aquel programa de televisión?

39
00:01:44,409 --> 00:01:47,756
El perro no tiene idea de
lo que dices, y luego le dices,

40
00:01:47,756 --> 00:01:50,067
quieres esperar hasta el sábado

41
00:01:50,067 --> 00:01:54,483
para ir al veterinario?

42
00:01:54,483 --> 00:01:55,933
Y el perro sigue sin
saber lo que le estás diciendo,

43
00:01:55,933 --> 00:01:59,064
y sigues, te
gustaría salir a caminar?

44
00:01:59,064 --> 00:02:00,373
Y entonces el perro va, camina,

45
00:02:00,373 --> 00:02:04,191
Entiendo a lo que te refieres,
y golpea la puerta.

46
00:02:04,191 --> 00:02:06,493
La forma en la que el perro te ve es
blah, blah, blah, blah, caminar,

47
00:02:06,493 --> 00:02:09,493
blah, blah, blah, comida,
blah, blah, blah, atención,

48
00:02:09,493 --> 00:02:11,395
blah, blah, blah, caminar.

49
00:02:11,395 --> 00:02:14,236
De alguna forma es como Python
ve esas palabras reservadas.

50
00:02:14,236 --> 00:02:15,840
Cuando dices 'class', es 'class',

51
00:02:15,840 --> 00:02:17,465
oh se lo que significa.

52
00:02:17,465 --> 00:02:20,962
Ahora si digo 'zap', es como 
si pensar oh, es 'zap' algo

53
00:02:20,962 --> 00:02:24,187
que tu tienes que decidir, o
tal vez es el nombre de una variable.

54
00:02:24,187 --> 00:02:27,468
Entonces las palabras reservadas son simplemente
palabras que cuando tu las usas

55
00:02:27,468 --> 00:02:30,822
estas palabras en Python, y
hay solo algunas pocas,

56
00:02:30,822 --> 00:02:39,234
'like' 'and' 'or' 'del' 'or' 'if',
'maybe', 'pass', 'maybe', 'in'.

57
00:02:39,234 --> 00:02:41,579
Muchas de esas no las terminarás usando,

58
00:02:41,579 --> 00:02:43,718
simplemente estan reservadas para Python

59
00:02:43,718 --> 00:02:45,784
y parte del vocabulario de Python.

60
00:02:45,784 --> 00:02:49,046
Este es el vocabulario de Python.

61
00:02:49,046 --> 00:02:52,153
Cuando nos movemos de palabras a oraciones,

62
00:02:52,153 --> 00:02:54,583
ves que Python tiene una serie de líneas.

63
00:02:54,583 --> 00:02:57,233
Un programa Python es una
serie de sentencias.

64
00:02:57,233 --> 00:02:59,179
Tienen un orden porque la computadora

65
00:02:59,179 --> 00:03:02,076
quiere saber qué es lo próximo,
qué sigue, qué sigue.

66
00:03:02,076 --> 00:03:05,066
Lo que sigue es empezar desde el comienzo.

67
00:03:05,066 --> 00:03:07,098
Ya mencioné 
una sentencia de asignación

68
00:03:07,098 --> 00:03:09,360
que básicamente dice x = 2.

69
00:03:09,360 --> 00:03:10,910
No es una sentencia matemática.

70
00:03:10,910 --> 00:03:15,011
Es una directiva como decir,
agarra esta variable dos,

71
00:03:15,011 --> 00:03:16,880
este valor dos, esta constante dos,

72
00:03:16,880 --> 00:03:19,487
y pégalo en esta ubicación de memoria,

73
00:03:19,487 --> 00:03:22,267
y recuerda que yo
te pedi que la nombres x.

74
00:03:22,267 --> 00:03:24,660
X es una variable, algo que inventas.

75
00:03:24,660 --> 00:03:29,013
Tu elegiste eso, pero 
es el trabajo de Python recordartelo.

76
00:03:29,013 --> 00:03:32,962
Así que dice, lo que sea
que tiene x, hay un dos adentro.

77
00:03:32,962 --> 00:03:36,267
Ahora extrae x, sumale dos,

78
00:03:36,267 --> 00:03:38,218
que suma cuatro,
y vuelve a pegarselo de nuevo a x.

79
00:03:38,218 --> 00:03:39,821
Así que esto ahora es un cuatro.

80
00:03:39,821 --> 00:03:41,093
Así que x es un cuatro.

81
00:03:41,093 --> 00:03:44,174
Print(x) dice ve y busca esa cosa

82
00:03:44,174 --> 00:03:46,098
que era un x e imprimelo por pantalla.

83
00:03:46,098 --> 00:03:49,244
Asi que cada
línea tiene algo.

84
00:03:49,244 --> 00:03:51,105
Estoy usando una palabra reservada, bien, en verdad

85
00:03:51,105 --> 00:03:56,522
es una función, pero
también es una palabra reservada.

86
00:03:56,522 --> 00:03:58,472
Están las palabras reservadas
y todas esas cosas

87
00:03:58,472 --> 00:03:59,442
puedes combinarlas.

88
00:03:59,442 --> 00:04:02,340
Hay operadores, el más es un operador,

89
00:04:02,340 --> 00:04:03,475
el igual es un operador.

90
00:04:03,475 --> 00:04:05,027
Estas cosas hacen cosas,

91
00:04:05,027 --> 00:04:07,330
y aprenderemos eso a su debido tiempo.

92
00:04:07,330 --> 00:04:13,508
Entonces  el bloque de
construccion básico de las líneas de Python.

93
00:04:13,508 --> 00:04:15,508
Si tomamos esas líneas de
Python y las unimos,

94
00:04:15,508 --> 00:04:17,082
terminamos armando párrafos.

95
00:04:17,082 --> 00:04:20,038
Programando en párrafos.

96
00:04:20,038 --> 00:04:22,974
Una de las cosas
importantes que te mostré es

97
00:04:22,974 --> 00:04:25,768
como hacer Python interactivo,
solo escribes Python,

98
00:04:25,768 --> 00:04:28,784
y escribes una sentencia, y
una sentencia, y una sentencia.

99
00:04:28,784 --> 00:04:31,143
Se vuelve muy cansador después de
aproximadamente tres o cuatro líneas

100
00:04:31,143 --> 00:04:33,741
de Python porque
empiezas a cometer errores,

101
00:04:33,741 --> 00:04:35,237
y tienes que empezar de nuevo.

102
00:04:35,237 --> 00:04:37,490
Lo mejor que puedes hacer
es, cuando tu programa

103
00:04:37,490 --> 00:04:40,223
se empieza a hacer un poco grande, es escribir un script.

104
00:04:40,223 --> 00:04:42,371
Pon las instrucciones de Python en un archivo,

105
00:04:42,371 --> 00:04:45,347
y dile a Python
que las lea del archivo,

106
00:04:45,347 --> 00:04:49,638
y luego corre el script como
fue ingresado en el archivo.

107
00:04:49,638 --> 00:04:52,359
Tendemos a llamar a esos archivos .py,

108
00:04:52,359 --> 00:04:55,106
tengo una serie de
videos que puedes ver

109
00:04:55,106 --> 00:04:57,419
para entender como funciona todo eso.

110
00:04:57,419 --> 00:04:59,999
Como dije, puedes escribir
interactivamente dentro de Python

111
00:04:59,999 --> 00:05:02,534
y es una gran forma de
experimentar con Python,

112
00:05:02,534 --> 00:05:05,093
revisar si una sentencia
hace lo que piensas que hace,

113
00:05:05,093 --> 00:05:08,728
pero el script es la forma, después
de pasar una o dos líneas

114
00:05:08,728 --> 00:05:14,743
de código, lo escribimos en archivos
y los corremos separado.

115
00:05:14,743 --> 00:05:17,980
Hay algunos patrones básicos.

116
00:05:17,980 --> 00:05:20,130
Es muy importante 
entender cada uno de esos patrones,

117
00:05:20,130 --> 00:05:22,840
y como decía, te vamos a eseñar
esos patrones aislados,

118
00:05:22,840 --> 00:05:24,896
y luego los vamos a combinar todos juntos.

119
00:05:24,896 --> 00:05:25,825
Cuando las combinas

120
00:05:25,825 --> 00:05:28,401
es cuando dices, oh
eso es lo que es un programa.

121
00:05:28,401 --> 00:05:30,835
Tienes que suspender la descreencia.

122
00:05:30,835 --> 00:05:32,460
Tenemos algunos patrones difrentes.

123
00:05:32,460 --> 00:05:34,677
Uno es una secuencia de pasos, haz esto,

124
00:05:34,677 --> 00:05:36,092
luego haz esto, luego haz esto.

125
00:05:36,092 --> 00:05:38,279
Los condicionales son como saltearse algo.

126
00:05:38,279 --> 00:05:40,522
Repeticiones haz esto
una y otra y otra vez.

127
00:05:40,522 --> 00:05:42,728
Las computadoras son muy
buenas repitiendo cosas,

128
00:05:42,728 --> 00:05:43,662
mucho mejores que las personas.

129
00:05:43,662 --> 00:05:46,723
Las personas se cansan de hacer
una y otra vez la misma cosa.

130
00:05:46,723 --> 00:05:49,735
Luego tenemos pasos de almacenamiento
y repetición también.

131
00:05:49,735 --> 00:05:52,485
Si le echamos un vistazo
a esto, y le echamos un vistazo

132
00:05:52,485 --> 00:05:56,083
a un programa Python,
este es un fragmento de código,

133
00:05:56,083 --> 00:05:57,204
este es un pequeño script.

134
00:05:57,204 --> 00:06:00,018
Si escribes esto en el
código, escribes esto en código Python

135
00:06:00,018 --> 00:06:03,672
en un archivo, y luego lo corres,
empieza desde el principio,

136
00:06:03,672 --> 00:06:04,609
y luego va a la próxima línea,

137
00:06:04,609 --> 00:06:06,570
y a la próxima línea, a la próxima línea.

138
00:06:06,570 --> 00:06:09,518
Python ejecuta los
scripts mientras los escribes.

139
00:06:09,518 --> 00:06:13,604
Pega una variable, encuentra un
un lugar llamado, en tu memoria,

140
00:06:13,604 --> 00:06:16,987
llamado x, pégale un dos en este,

141
00:06:16,987 --> 00:06:18,683
luego ve la próxima, imprímelo por pantalla.

142
00:06:18,683 --> 00:06:20,482
Entonces el programa produce una salida.

143
00:06:20,482 --> 00:06:23,319
Ahora lee x y súmale dos, 
y pégalo de vuelta en x,

144
00:06:23,319 --> 00:06:25,703
entonces x es cuatro, luego imprime eso.

145
00:06:25,703 --> 00:06:28,053
Este lado aquí, este
se llama diagrama de flujo.

146
00:06:28,053 --> 00:06:29,632
No te voy a hacer dibujar diagramas de flujo.

147
00:06:29,632 --> 00:06:31,173
Solo voy a dibujarlos pocas veces

148
00:06:31,173 --> 00:06:33,039
en formas que piense que te van a ayudar.

149
00:06:33,039 --> 00:06:34,874
Pero lo puedes pensar como Python,

150
00:06:34,874 --> 00:06:37,118
cuando termina algo,
va al próximo,

151
00:06:37,118 --> 00:06:38,578
a menos que le digas lo contrario.

152
00:06:38,578 --> 00:06:40,108
Termina esto, ve al próximo.

153
00:06:40,108 --> 00:06:41,977
Termina esto, ve al próximo.

154
00:06:41,977 --> 00:06:45,449
Termina esto, ahora el
programa terminó.

155
00:06:45,449 --> 00:06:46,874
Así que esos son los pasos secuenciales.

156
00:06:46,874 --> 00:06:49,281
Solamente escribes, Python los corre.

157
00:06:49,281 --> 00:06:52,725
Son importantes pero
de alguna forma poco interesante,

158
00:06:52,725 --> 00:06:55,598
porque por ahora solamente puedes hacer esto,

159
00:06:55,598 --> 00:06:57,116
y no puedes hacerlos inteligente

160
00:06:57,116 --> 00:06:59,090
porque siempre
va a ser el próximo paso

161
00:06:59,090 --> 00:07:00,679
Así que lo próximo que vamos a hacer es lo que se llama

162
00:07:00,679 --> 00:07:03,025
pasos condicionales, y
es donde empieza a

163
00:07:03,025 --> 00:07:07,045
volverse inteligente, cuando
puede codificar tu cerebro

164
00:07:07,045 --> 00:07:09,169
a la computadora, como si oh, espera un segundo,

165
00:07:09,169 --> 00:07:12,101
solamente hagamos este paso
si algo es verdadero.

166
00:07:12,101 --> 00:07:15,022
La sintaxis que tendemos a usar aquí

167
00:07:15,022 --> 00:07:20,666
es la palabra reservada if, if.

168
00:07:20,666 --> 00:07:23,234
El if es como un pequeño desvío en el camino.

169
00:07:23,234 --> 00:07:25,490
Puedes seguir un camino o
puedes ir por otro,

170
00:07:25,490 --> 00:07:27,252
y estás preguntando una pregunta.

171
00:07:27,252 --> 00:07:29,986
Dentro de la sentencia if, justo
aquí, hay una pregunta,

172
00:07:29,986 --> 00:07:35,487
decir es x menor a 10, eso
se resuelve a verdadero o falso.

173
00:07:35,487 --> 00:07:37,042
Si es menor que 10, es verdadero.

174
00:07:37,042 --> 00:07:38,935
Si es mayor que 10, es falso.

175
00:07:38,935 --> 00:07:43,241
Entonces hacemos esto, si es menor que 10,

176
00:07:43,241 --> 00:07:45,851
tenemos este bloque de código
identado, también estos dos puntos

177
00:07:45,851 --> 00:07:46,879
eso nos dice que estamos al inicio

178
00:07:46,879 --> 00:07:48,502
de un código identado.

179
00:07:48,502 --> 00:07:52,253
Lo que básicamente dice es si
esto es verdadero, corre este código.

180
00:07:52,253 --> 00:07:53,982
Si es falso, saltea este código.

181
00:07:53,982 --> 00:07:55,763
Puede ya sea correrlo o salteralo,

182
00:07:55,763 --> 00:08:00,224
depende de la pregunta
que fue preguntada.

183
00:08:00,224 --> 00:08:01,057
Si ves este código,

184
00:08:01,057 --> 00:08:04,080
es bastante obvio que es lo qué pasa.

185
00:08:04,080 --> 00:08:06,127
Llega abajo x es cinco.

186
00:08:06,127 --> 00:08:09,642
Si x es menor a 10, eso es
verdadero, así que corre este código

187
00:08:09,642 --> 00:08:13,324
e imprime por pantalla 'Smaller', y
después viene aquí,

188
00:08:13,324 --> 00:08:15,729
se desindenta, la próxima secuencia básica.

189
00:08:15,729 --> 00:08:17,880
Termina siendo una suerte de bloque.

190
00:08:17,880 --> 00:08:21,619
Si x es mayor que 20,
Si x es mayor que 20,

191
00:08:21,619 --> 00:08:24,595
oh, vuelve, vuelve.

192
00:08:24,595 --> 00:08:27,657
Si x es mayor que 20,
esto resulta ser falso,

193
00:08:27,657 --> 00:08:30,274
porque x es cinco así que saltea esto.

194
00:08:30,274 --> 00:08:33,254
'Bigger' nunca sale,
y luego continúa

195
00:08:33,254 --> 00:08:35,240
e imprime 'Finis', oops
ese es un error tipográfico.

196
00:08:35,240 --> 00:08:37,951
Lo pasa a minúscula
imprimie e imprime 'Finis'.

197
00:08:37,951 --> 00:08:45,216
Así que, corre esto,
saltea esto, y luego termina.

198
00:08:45,216 --> 00:08:48,475
Aquí está lo último que vamos
a hablar, los pasos repetidos.

199
00:08:48,475 --> 00:08:52,400
Vamos a volver a almacenar
y devolver luego,

200
00:08:52,400 --> 00:08:53,652
pero ahora, solamente vamos a hablar

201
00:08:53,652 --> 00:08:56,105
del tres de cuatro.

202
00:08:56,105 --> 00:08:58,067
Este es otro programa.

203
00:08:58,067 --> 00:09:01,736
La clave es que vamos a
usar la misma decisión,

204
00:09:01,736 --> 00:09:03,812
donde vamos a entrar,
pero luego lo vamos a correr

205
00:09:03,812 --> 00:09:05,725
por un rato, y luego tendremos

206
00:09:05,725 --> 00:09:08,131
una condición de salida con la que salimos.

207
00:09:08,131 --> 00:09:11,880
Esto se repite, una y
y otra y otra y otra vez.

208
00:09:11,880 --> 00:09:15,444
Es la escencia de cómo hacemos
que las computadoras hagan cosas.

209
00:09:15,444 --> 00:09:17,203
es aparentemente dificultoso, bien,

210
00:09:17,203 --> 00:09:20,311
es naturalmente
dificultoso para la gente.

211
00:09:20,311 --> 00:09:22,647
Como codificamos esta noción que queremos

212
00:09:22,647 --> 00:09:25,835
hacer algo para siempre, no
para siempre, pero por un rato?

213
00:09:25,835 --> 00:09:28,465
Cómo codificamos esa noción?

214
00:09:28,465 --> 00:09:30,625
Lo hacemos de esta forma.

215
00:09:30,625 --> 00:09:33,505
Tenemos nuestra sentencia,
sencuencialmente ve a este 'while'.

216
00:09:33,505 --> 00:09:35,025
'While' es una palabra clave.

217
00:09:35,025 --> 00:09:37,611
Está preguntando otra pregunta
que es una pregunta de verdadero/falso.

218
00:09:37,611 --> 00:09:39,804
Es n mayor a cero?

219
00:09:39,804 --> 00:09:42,948
Leo esto siempre y cuando n
permanezca mayor a cero,

220
00:09:42,948 --> 00:09:44,854
sigue haciendo este bloque identado.

221
00:09:44,854 --> 00:09:48,028
Tienes dos puntos al final,
y luego dos líneas

222
00:09:48,028 --> 00:09:51,406
de código que están identadas, entonces
lo que nos dice cual es el ciclo,

223
00:09:51,406 --> 00:09:54,548
y ahora esto esta desidentado.

224
00:09:54,548 --> 00:09:58,569
Entra y si esto
es verdadero, si es verdadero,

225
00:09:58,569 --> 00:10:01,023
si es verdadero, corre estas dos líneas.

226
00:10:01,023 --> 00:10:04,924
Imprime por pantalla n, n es un cinco,
entonces dice, n = n - 1,

227
00:10:04,924 --> 00:10:07,645
lo que convierte a n en cuatro, y vuelve arriba

228
00:10:07,645 --> 00:10:09,911
y vuelve arriba
y hace la pregunta de nuevo.

229
00:10:09,911 --> 00:10:11,804
Es n mayor a cero?

230
00:10:11,804 --> 00:10:14,549
Si es, continúa e imprime cuatro,

231
00:10:14,549 --> 00:10:19,055
y luego le resta, y lo
convierete en cuatro, tres, dos,

232
00:10:19,055 --> 00:10:20,974
e imprime por pantalla uno, luego viene arriba.

233
00:10:20,974 --> 00:10:25,938
Luego de esto, n es ahora cero, n es ahora cero.

234
00:10:25,938 --> 00:10:28,620
y ya no es mayor a cero, así que toma

235
00:10:28,620 --> 00:10:30,956
una suerte de rampa de salida, y va aquí abajo,

236
00:10:30,956 --> 00:10:33,176
así que toma la rampa de
salida y va allí,

237
00:10:33,176 --> 00:10:36,750
y corre la próxima línea.

238
00:10:36,750 --> 00:10:38,259
Vamos a volver a cubrir todo esto de nuevo,

239
00:10:38,259 --> 00:10:40,806
solamente estoy tratando de
darte un panorama amplio.

240
00:10:40,806 --> 00:10:42,213
En los próximos capítulos vamos a tratar

241
00:10:42,213 --> 00:10:43,895
todas estas cosas de nuevo,
y vamos a tratarlas

242
00:10:43,895 --> 00:10:48,087
en mas detalle con
mucha más información.

243
00:10:48,087 --> 00:10:50,931
Esto es una especie de combinación.

244
00:10:50,931 --> 00:10:56,492
De nuevo, no estoy esperando
que realmente entiendas estas cosas.

245
00:10:56,492 --> 00:10:58,221
Vas saberlas en las próximas semanas.

246
00:10:58,221 --> 00:11:00,556
Vas a ver este programa de nuevo.

247
00:11:00,556 --> 00:11:03,384
Pero esto te muestra cómo
combinamos aquellos patrones.

248
00:11:03,384 --> 00:11:08,642
de repetición, secuencia
y condicional juntos.

249
00:11:08,642 --> 00:11:10,357
Esto es un poco de código secuencial.

250
00:11:10,357 --> 00:11:12,621
Viene aquí, corre esto, cual ocurre

251
00:11:12,621 --> 00:11:15,195
que pregunta por el nombre de un archivo,
y abre el archivo.

252
00:11:15,195 --> 00:11:17,264
Crea una estructura de datos
llamada diccionario.

253
00:11:17,264 --> 00:11:18,407
Esto es todo secuencial.

254
00:11:18,407 --> 00:11:20,793
Ahora el 'for' es otra forma de bucle,

255
00:11:20,793 --> 00:11:22,711
va a ciclar por un rato.

256
00:11:22,711 --> 00:11:26,053
Esto es dentro de un bucle,
podemos tener hasta dos identaciones.

257
00:11:26,053 --> 00:11:28,806
Ese es otro bucle, así que
estos son como repetición,

258
00:11:28,806 --> 00:11:31,705
y luego va abajo
a la proxima parte secuencial.

259
00:11:31,705 --> 00:11:32,805
Luego hace esto.

260
00:11:32,805 --> 00:11:34,558
Aca hay otro bucle que va a correr.

261
00:11:34,558 --> 00:11:36,550
Luego acá hay un condicional
que va a correr

262
00:11:36,550 --> 00:11:38,833
Cuando todo este hecho, vamos
a imprimir por pantalla lo último.

263
00:11:38,833 --> 00:11:46,133
Esto es por supuesto lo que el programa hace,

264
00:11:46,133 --> 00:11:47,441
se da cuenta de la palabra mas común

265
00:11:47,441 --> 00:11:49,203
y la imprime por pantalla.

266
00:11:49,203 --> 00:11:51,343
Así que esta es una historia corta de Python.

267
00:11:51,343 --> 00:11:54,622
Lee algunos datos,
lee el nombre del archivo,

268
00:11:54,622 --> 00:11:58,422
abre el archivo, habla
sobre cómo hacer un histograma,

269
00:11:58,422 --> 00:12:02,194
y luego busca a través
la palabra más común.

270
00:12:02,194 --> 00:12:05,010
No te preocupes mucho por esto.

271
00:12:05,010 --> 00:12:06,177
Durante las próximas semanas, vas a unir

272
00:12:06,177 --> 00:12:08,487
los puntos de manera de
entender absolutamente

273
00:12:08,487 --> 00:12:12,922
cada línea de este código.

274
00:12:12,922 --> 00:12:15,513
Esto es un pequeño resumen del Capítulo 1.

275
00:12:15,513 --> 00:12:18,374
Quédate con nosotros.

276
00:12:18,374 --> 00:12:21,436
Será en el Capítulo 7 cuando
empiece a tener sentido.

277
00:12:21,436 --> 00:12:24,524
Realmente tienes que confiar
que estás aprendiendo

278
00:12:24,524 --> 00:12:27,575
cosas importantes y
que todo tendrá sentido

279
00:12:27,575 --> 00:12:32,291
cuando unamos todo por el
Capítulo 7 en unas pocas semanas.

280
00:12:32,291 --> 00:12:35,708
(música tranquila de jazz de piano)

