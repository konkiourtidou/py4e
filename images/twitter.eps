%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 445.000000 287.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.16 (Build 21A344) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 445 287
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 445 287
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Courier
%!FontType1-1.0: Courier 1.0000.1.0000
14 dict begin
/FontName /Courier def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /i put
dup 34 /d put
dup 35 /space put
dup 36 /n put
dup 37 /a put
dup 38 /m put
dup 39 /e put
dup 40 /r put
dup 41 /t put
dup 42 /v put
dup 43 /one put
dup 44 /c put
dup 45 /h put
dup 46 /u put
dup 47 /k put
dup 48 /two put
dup 49 /o put
dup 50 /p put
dup 51 /three put
dup 52 /l put
dup 53 /w put
dup 54 /four put
dup 55 /s put
dup 56 /underscore put
dup 57 /zero put
dup 58 /ellipsis put
dup 59 /f put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1341 1 index div -838 2 index div 2177 3 index div 2231 5 -1 roll div]cvx def
/sfnts [<








06F4B80042DC00B800004558B800182F1BB90018000B3E59B800004558B8001E2F1BB9001E000B3E59B800004558B800382F1BB9003800073E59B800004558B8003E2F1BB9003E00073E59BB00320003001100042BB8003E10B80004DC411B0037000400470004005700040067000400770004008700040097000400A7000400B7000400C7000400D7000400E7000400F70004000D5D41050006000400160004000271B8003810B9000B0002F441170037000B0047000B0057000B0067000B0077000B0087000B0097000B00A7000B00B7000B00C7000B00D7000B000B5D410500E6000B00F6000B00025DB8001E10B80025DC41050009002500190025000271411B0038002500480025005800250068002500780025008800250098002500A8002500B8002500C8002500D8002500E8002500F80025000D5DB8001810B9002C0002F4410500E9002C00F9002C00025D41170038002C0048002C0058002C0068002C0078002C0088002C0098002C00A8002C00B8002C00C8002C00D8002C000B5D30313735343633321716171E013332363534262B0122263534363332163332363332161D01140623222726272E01232206151416171E01151406232226270E01232226B221252918100D2AA4636A80677D37CCD6D1BD4DA0040B3E1E222120231E2C1F143578515E7376C3D0C0D4B4398C6A233211232548B22C2638221136415646473C8E8784922B27323275352F332312312B53403F360405878D87A2151917173100010058FFEE046204BA003000BDBA0007002300032BB8000710B9001E0004F4B80027D0B8001E10B80029D0B8000710B8002FD0B8000810B80030D000B800004558B8002C2F1BB9002C000D3E59B800004558B800172F1BB9001700073E59B8002C10B80006DCB900000001F4B8001710B9000B0001F441170037000B0047000B0057000B0067000B0077000B0087000B0097000B00A7000B00B7000B00C7000B00D7000B000B5D410500E6000B00F6000B00025DB8000610B8001FD0B80020D0B8000010B80026D030310132161514062321111416333236333216151406070E01232226272E013D01112322263534363B013D0134363332161D010377312D2A2AFE6B55675BFE1E1C27313B629D45759F271411AA2A2634557125272C22036422252323FEB2A4686A281D21311727244B4A2360641F014E2125291ECD352B293259CB00010048FFEC0473039C003100FBBB00310006002A00042BBA0012000B00032BB8001210B9001F0004F4B80006D0B8001E10B80007D0B8001F10B900170006F4B8003110B900250004F4B8001210B80033DC00B800004558B8000E2F1BB9000E000B3E59B800004558B8002D2F1BB9002D000B3E59B800004558B8001A2F1BB9001A00073E59B800004558B800222F1BB9002200073E59B9


003A002F00220016000000082B00BF00010050004A002F00220016000000082BBF0002005F004A003D002C0016000000082BBF00030048003A002F00220016000000082B00BA0007000400072BB8000020457D6918440000
00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/zero 2 def
/one 3 def
/two 4 def
/three 5 def
/four 6 def
/underscore 7 def
/a 8 def
/c 9 def
/d 10 def
/e 11 def
/f 12 def
/h 13 def
/i 14 def
/k 15 def
/l 16 def
/m 17 def
/n 18 def
/o 19 def
/p 20 def
/r 21 def
/s 22 def
/t 23 def
/u 24 def
/v 25 def
/w 26 def
/ellipsis 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1341 -838 2177 2231} readonly def
/UniqueID 4234413 def
currentdict end
currentfile eexec



8E4C90A6E5F14EADB90B5C39D4C4823D7547812A2E68D19B6FEDA476AE8602530404DF59181FAE9FBC4B48BFC52F70B85376B08E935654ECC60741A618DDC41F9CFCEE181CEC920C42FA4BC92EE4A9619D33FCA8F3937DADE107065EEF50EA02FEE97CBD0FB2CC008376A8797F4BA2406B8B2800AD0872F709069CC195238DAB45FECA4D9B27BC2D8311BD98B3602F2E3B980211F3AC4043D727EF85A28045EAD08C14C5B16CD672F9479A746AF410F89595B5FB7C3E5D45A2F4719526D5A35FE12BF37F158323598AB9496A7F563A18508B9AC2DD19EE421AC6F180D0B9C79C96A9EA13E53ED6EFCF772900FCE8F35CDE86FCF70F9EB8EAFCA63555C5AE3865AF10662EA82A18EC46BEEA82F7511F76FA56C4BE490DBAA94C49FB2F0C125C6FDE2D6AD3162BB5230AA243560A0D103A2B19DF56FD3E31245E67CA99477613C47B508DA82D4F4CA521B2F95A5E2FC84D79D2193D3346E28067276872BDD7AC6AC809B45DE51C4079B648056EAC7BC221271122612EE790BC936CEE2D7DC00C60915DE708A5FE4773792586C6E4027BFC3443554E51F0185A8D7804B13EC223A639A9CE935D8C6A4D69929572D37008B692AC04FF48F25E984EBF4B0CE5AD89193706313B14E7BF5804D8607A074536B25655D16886EBDEC7FA1A087A4D3D9015A0C86852280BBC48C7276641A4C271D4A5F76B8299F0075998BDB50D5ACC0472093858E5995926813DE267C9DF41B7CB7ECC6FF95C5BF4D8F269DF9556B6E72589D8F419DE1BDC3F7880365C973373AAB6BE25C74ECB6AFAB34EC8CE9276E4B6619A52E30AE178683C4ED9790931438166D40AFF2C804E588BF6FB847077DF8E8441825D926281F96845E5E543729DF98F36A03D878ED4FF5026E23E498B2FAFEF3E7EE514388AB2385E88984E42F735CCC67DD9F166B742CD58E1A8B0CB60CFB7A324FEB348E67653B15B1FBF2FF66AF3B538D6AC6B4FABF9C0A0349E87FAC3AA1811ED9D797E3170F69F90A03D3D597F6DA64285A9296F8731422DDE8A2EEDDC72FDDFB57BCF50705CC17349A3E3155BE71BE12AC58B35F390899DAA91314AEA4C6CB09A7E2CE533623BCD3FB1497DFA72DFCF0B45B4E61A57A13759D73FD83E21C22F18E2B69F577EC65386163A5C457560854DE6105CFA4A62DEF89B46850E7E1BEDCD1F192A7D823511887F8E183F8F0EB05014AE639BF86C1814FAC4AD56C252A05C0AFF2790A323FFB7704C2A40F4C460D0E3D617CA52E1A388C5C9E5745F4B7C79643B100FB2CC8EC059BF08511FEEE133FC143A652C774AE0C7843C666894586C5167A9170F259D49A3F4B3E07F9E6782EB65A70EBDEEB436D32D8D345567E49975C10D90EF8A639DA872254807286648925E945D324349EC4DE7ECA99A7B0491E260677EFD3B1EA47AAA4661D8EC9BDE77EEDCE8CB240629FB97CF
BED5E058ECA5E9A8908B4E3E6D11B16A603B258094D7C6199F367FF0978588A2497E4D07DC2B8D0A445DC8A11CA2D55E5111069D2DE0D69C0763386B3DB3222CAF6B53CFB4D46F7F074627CA390985AFEE4C137B2FEC12C0E2EF924A2BAEB61E792310520E544A065E5726CB8ACD1F118CE5C2E047754764E93F600261E4F6103C73011894C3E4BB7ABFF1286333779AAABC50BF7573F0446FF9BD49EC972C63C31B336223AC876292FCE1565DAC8176CE13F9B07E72F9F9A63063AFCC6B1F726EF80B8D54BFFD4FDC63E49F5194837BDD448709FEFBBF7572058AE7179BE333C7CFDF95B90D2D156DEDC1AF0351A713E1A762C362D80365C4D588BFEA40286AA27F5F503AD783CDE2CCCA48B4EAEAC5E8738C4774E41633533829EE93201FC5A1ACD9C94D0688F927BD03CC17630E7E538EA82B4C44D1149A45182C05CE03CCDA388DD6BE7460DBFD6DA9C398044DFB7F662045D1055C7D17EF816A1FBAF1BEE03B82FA5762F1E4B261CB20E73A4D3E75180DF8282ABACDFD7590CA738C8E20DD0218D241C8A5D248384E361FD323365AB94CD657584DADF97084061EC0CACF40CEA03FE17CB772E38A96D19AD8A2B5D4BD9822DEB79CB7833B5F9B0AC8BC429A8D89D398E61435EADC89AA81EAB85B963B475F95DBBAF2F015A3C1D23D778EAF1061CC41887CFAC556C46E27933FA67A1578145BD3702F53934765B05552F334DC50ECE1CA974F9A695E0FCD9CBB8348FE9EF57542E3BE7D36416FBE3C0E8CB31E63B37FBF5265F1E7FA293BBFC982F28472F2936C3AB857BD497AFF360A387E2A05E72635FDF15FE5A84A257467D1FC3AA9A89A7C2095B27692E8A8A61583077A27E8590E47C14343A891B44DBF7A0EABAFF4A1C31E847E7298EF6364EE811E1D204D0E82330CE65DE5D4283E2E00E9EC7898470909F863B92D6B01D916BCA65C47B4C2ADD7E27A7653BCEFDEB7854CCE30812D4668FFCE290749101EFDE9573AD117B166A917472AB0190072F412E549A205EAAE0BB859F159D4B878E2F0AC3D053232FF4E2C46075F58042D2BBA44C6C9D99754F2648E4EDEFD6661426944332CAB9A45E05A2566F24A7A2BD0C2385E8BBC6039D66EC0B672E7BE6F9F93D821AE9072FDBBD9F76A4C79149A884D33DCC0367DDC71559A99630C9C9E0937374E42839BB6835CF242231F545A7E832522835D478574042F74D9EB7A3CCB20D2B6041CE193CF0289569BCAD5D1D0D81CFB195D6B0DACBEFC7E37F1EFC08C2FAE7B36DB3130AC16E96CE8239DAA3DBE58EDD5B3C7764F0519BE20C6A8D1DF24A56E5FE75EFAA619517E54E8375AA517322A2C3E334CFC1C3D8DB605270575D384699853B20A69503726A823CEAFB760D23308D105603B3144873D6E91C0E3DE0B2EC97C53AA114B8D1A3F6280A33DC8879935E3AEF85CD4F14153092D759689
D07931EE788442C772F86C68C86FA0338AC8369FE2F7EA737BC1D5B9099678D26B1DDDC5300E953363829407E44422CC4C82EAA31300A0B3F86ADDEEDE267D0E9D511488F797B784B74D46704CEA3CD5854E5B73DD2757B4423324F1BE629A92941DEE4257D414B0CFC26D60BDA0699B6360354E3F126611B5252EE82479D66D880F07AAA88F879E2379EBED8EF0FE152B4EAB28ADDB658E93F4F60D8389AB420971B193EF35D0CECEEB4B7B18BF0AE769321177D0EF1BFBC9F6D3FF5A7C5B0F8E7AE237F5B8D5D8193199C637CFCEE0A65E44797DF69CE78C801C8AE3002E21BA6A41A7104B42E7A206C77EC0E4E2E96353335FBBE152376E432C903B7B316F649796E6F3BC4E5F7403D22E6B3651677A67A32F19A21A5D568235F553CF97E93D758DFF844821D1FCE6C6E48363BED8CC5C624EBD781AE5259C188EA4CD8E86117DF837B4CA902A4587E02486D6D3F35583AEB26327A4C23511378470EE90D6CC545E54BBD0A6ABD30EC671488EA7972270A4C4E6A70A9088B572FCC6C93293317EFA048A0F465E8500815EB80F7C1970866ECC860E94377222AEA0EE09CAFE0BF6D39C78B82A96CEFDC7DCDC69630950C1F5F2BB122BE2CD9476E42DB4FE19326B2F91594A6CC8B10048F25C74D242D799D6546C239FDDB3A301EEDAA99CA0473A1A47F4857BAC16CC6CA7FFA6CE00221B568B1807339FF897EE9B487DA5EF1CC3B5579FFD489599E9B3347CE67D2CC598C2575D39DCA2B9F7E1A68F3DBBB9EE74BF4B4F13973C72A6502FA30CC4A85E35B72667A897E053D06037EFC5583036924CFB2A6583D44056AE28325EC80D4E7E026ABB58E73C32C1638E625B88B2F9314FDB136C40ADE1E280BDE0A04BE8D4C7F5436AB9537982B61A47DC391E2B38243565B10D1B167AE1DDE535E4D31A1C0AC7710C6A7D5DF2870DF1F7435F31F08F3877146BA9120346B472E761DE43CCE4EA969BA430EFCFA55E1CA52FDCDE2229A57B1BEB6F753D76954A214D76A8C4BE663C221D6E94E8478D7DD76776F1882F108774B422EC4A8519DB1F958DE3A68D6A34414FD35A0A19C2AB61E096A483445F02660EBCBB12FC6CF1DD803B7859260E458ED89ECEE829B22D3935D7CBB8C942F25B1C3BA38D5818B04F501DAC104EB397D9C43B144340838B2A2B7ED835DF25E1549704A53811D18AE7B8C71BE578D9CF762DCD7FDD28AEB7D12D9B4A1F1EA1DC9911D65D0A3C801B3368C337434D60E90792355A83CC822D1ACF3A5670BC0B2A8EA6D3340C364AC068A896632D72DB23E6205259A7F55FE97CE8EC3D3DF2CD60E199953DBC59489E68D0136D2A6337A8C5583669565167D80939937DB859D71C138EF500BA941FBAE056A5147A611D250F3FD4FA4A4EC1593032CA46184BEF3F226ECA168E49E9B7B0EF3D5C42CA7E6C7AA3F7D3618BE58ECAB64E23
063126AA131CDDCD8FD473BA18CBA558983FFC0DDFD727713D43E6ECA4E50245899EBA07A148C8A820160EBB3472D4A7DEC3BF77C8AF7DFD04330B02CD3805CA1D9D63DF7E9D449D7BD5BAB5073D20AC94D407536288CA422287F479CBB549C7ECEB610EE1668F524DB94BD7648D96087842BAD185318AD6AC4195EE8FA5ED7635B606680C032B26DFEC40AA2DA27B87AE7018E408A75FF1ADCCC0FC7B8ECDB1A9C9715C2BE81D16ABAC6ECACEA67C6405B0A136FE29A120884FE483E1EB0D9DD67B86B9840AA8E5A3C9C44A755CD4D433C17BBC0E66E2DA80EA6428128AB518882C6ECD656B48C869E46879FF606C3B1DB546EB4C9FA36E69DAC33BBB51932659407309D67C7A81B278B99683A4605787BDD8A66E09E495186BB7B60794EB11396CA5740A1F79F6D7D83A52114283B4E06DAE886BFEBE1D1C3D0A7E88FC0C7BAD72D627E6E0BEE4DF1B3044CFF5C6548308178869429CB82382E3145E7EF7ED3E7945D607FFD7445BC52792AA6EE73026DC9989C1E2B644BC11C8EEF2A6ADF60B55E6772DECE508DCFCFCCC3871E4FB553A4025263037662BFB0D3579239C4DB9F89B314047C22F5908958FBC9A0F3AB77F4248B1348798D7EF43ECC06131A26CC253D4FE6D752E48A32C7574CFFD74CCD6C38798801E6224A0DF2DBF3DACD41A139EDCD2A99D8DF8AF0EDEF5E239BB34C0E41AE9C3C023F8850022EFAFFFBAECA63422BB4FDBAA390A89E4FA8AF35B399E7F5DA8484D80A73AC31FE2872165A16ADEDE2B6909AB08AE1A242BC2FC13D31F820BA116EF070D40AF9671807C12533C260CAB5C064400D0F843B0F522FD6AA35FFBD74CAE48C91016C61C97AD7F017F56A9498809B26058492B30FEB672D10058740DB6FCA36BCCCEE5FD438788108E6158D3CC6C003EC8EB07BA520A040F9DE7BE39501E864478CEBF356786FB79B69C4DEA0AEF0DB0758E5A983549A291D29F87DA5B45F0A62FBABD18E23D5155E3AA78
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/Courier cguidfix
/F1.1/Courier renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /f put
dup 34 /o put
dup 35 /l put
dup 36 /w put
dup 37 /s put
dup 38 /F put
dup 39 /P put
dup 40 /e put
dup 41 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/F 1 def
/P 2 def
/e 3 def
/f 4 def
/l 5 def
/o 6 def
/p 7 def
/s 8 def
/w 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4111738 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28290903B6EADCF584518CA93D87C86FA070AFB3EF631D5B88CD72734705C300BA293240E57484915FD75601CC0B97B98A749C856D8BD36C65587405E4FFB8320FE370E35C9DC5497FCE140936C3293A4C4E5A2CA57A1B923E3C2A1D0B19BA92BAF702AAF20FDC8A7073D95631A246F0ECE4E87F0B3853F141913486CC1B5B39561E23D2E7442DB13F69928B281161F82CAC033D9D816BE4B5024CA9C259A121405E49266DE2FF4CE40BA2B0B1F0B183A39ADB287E435828BA60A141100F4A9B9755255825A039F6A10EE7A0D3D6A96BC3FEADFAEE6390D80C3061CEB6D4888E198827D991F0EC8183D36FD43C6B6005D21CF19726432A48BAC0DAF3DFE2D6FA19EC4F758951A9F6E2A4E2004D8B8900039C9F08BC5BBC87AAE4A2A352D45FB2DE60FEDD96A25A7E4124594982958AB4C240BED131E365522A412C872294C6FC8EE3505F3E5585018FB138FBFC208CCAAEB0407F66D3E6E1B3938B0B9909011E49E361457D64DB4E34E18B23D9753DF72844024D6893FF03C72E44D88B8AFE9885963833349E6B1126F37ADA99E6903BE7A51F4906F60401E7261ED537646B0B0954F378CF9DDA573FE7F9E4608C967AD4E2E4FFB3DD3A8842DF0B5676D1D46FF3E3158BAF4B39A4963360642DCBD2E6636E40AD87B1571619B9E0663D7D8E30483FF58739CA2FCBF2037C2EFDCA098D9663EDCB703314AE3C3B39D3B6B697E986B8D4C29AC3E0DFFDEDB799547BE43EF306D0BF8D5C7494A35F41DDFF6B33218AC12C327

4039BF44B93340DC97D9A15898634CB861BB48B99D8778E3397F15FEA7E5B132C6CDEF815A77A30D9C1C3148E523108AF209C16C6429D342EA648F4657110F55DFB3A7A72AC0EDC4BECE9821
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 445 287 rc
2 290 m
699 290 l
699 -560 l
2 -560 l
h
2 290 m
f
218 146 m
443 146 l
443 2 l
218 2 l
h
218 146 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 2 290 cm
216 144 m
441 144 l
441 288 l
216 288 l
h
216 144 m
S
0 i
1 1 1 sc
CM
218 146 m
443 146 l
443 110 l
218 110 l
h
218 146 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 290 cm
216 144 m
441 144 l
441 180 l
216 180 l
h
216 144 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 330.5 128 cm
/F1.1[ 16 0 0 -16 0 0]sf
-100.81641 5.5 m
(!"##$%&'####\('\)\(!'*'")[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
1 0 0 -1 330.5 57.5 cm
-89.5 -32.5 m
(+##"\(,-.,/#######+###)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 6.171875 0.000000 0.000000 ] xS
-89.5 -13.5 m
(0##12'$,1$\)'$\)###+)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
-89.5 5.5 m
(3##4-%5\)-1\($#####+)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
-89.5 24.5 m
(6##7\)'*'8,122!$##9)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
-89.5 43.5 m
(###:#)[ 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
2 146 m
155 146 l
155 2 l
2 2 l
h
2 146 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 290 cm
0 144 m
153 144 l
153 288 l
0 288 l
h
0 144 m
S
0 i
1 1 1 sc
CM
2 146 m
155 146 l
155 110 l
2 110 l
h
2 146 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 2 290 cm
0 144 m
153 144 l
153 180 l
0 180 l
h
0 144 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 78.5 128 cm
-67.210938 5.5 m
(;\(1&8!"##\)18!")[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
1 0 0 -1 87.5 67 cm
-62.5 -23 m
(+#########0)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
-62.5 -4 m
(+#########3)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
-62.5 15 m
(+#########6)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
-62.5 34 m
(####:)[ 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
1 0 0 -1 312 272.5 cm
-52.808594 5.5 m
(12'$,1$\)'$\))[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
1 0 0 -1 89 236.5 cm
-33.605469 5.5 m
("\(,-.,/)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
1 0 0 -1 302.5 236.5 cm
-43.207031 5.5 m
(4-%5\)-1\($)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
1 0 0 -1 317 200.5 cm
-57.609375 5.5 m
(7\)'*'8,122!$)[ 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 9.601562 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 2 290 cm
126 54 m
242.48091 20.71974 l
S
0 i
CM
252.17311 271.47803 m
243.65675 272.16483 l
245.30507 266.39569 l
h
252.17311 271.47803 m
f
0 J
0 j
1 0 0 -1 2 290 cm
250.17311 18.521971 m
241.65675 17.835167 l
243.30507 23.604311 l
h
250.17311 18.521971 m
S
1 J
1 j
0.60000002 i
126 54 m
242.10004 53.667336 l
S
0 i
CM
252.10001 236.35559 m
244.09145 239.33266 l
244.10864 233.33267 l
h
252.10001 236.35559 m
f
0 J
0 j
1 0 0 -1 2 290 cm
250.10001 53.644413 m
242.09145 50.667347 l
242.10864 56.667324 l
h
250.10001 53.644413 m
S
1 J
1 j
0.60000002 i
126 54 m
242.48091 87.280258 l
S
0 i
CM
252.17311 200.52197 m
245.30507 205.60431 l
243.65675 199.83517 l
h
252.17311 200.52197 m
f
0 J
0 j
1 0 0 -1 2 290 cm
250.17311 89.478027 m
243.30507 84.395691 l
241.65675 90.164833 l
h
250.17311 89.478027 m
S
1 1 1 sc
CM
160.5 252 m
221.5 252 l
221.5 222 l
160.5 222 l
h
160.5 252 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 2 290 cm
158.5 38 m
219.5 38 l
219.5 68 l
158.5 68 l
h
158.5 38 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 191 237 cm
/F2.1[ 16 0 0 -16 0 0]sf
-25.167999 5.776001 m
(!"##"$%)[ 4.736000 9.184000 3.552000 3.552000 9.184000 12.128000 0.000000 ] xS
1 0 0 -1 34.5 161 cm
-27.392 5.776001 m
(&"##"$%)[ 9.184000 9.184000 3.552000 3.552000 9.184000 12.128000 0.000000 ] xS
1 0 0 -1 250.5 161 cm
-24.888 5.776001 m
('\("\)#\()[ 10.368000 8.592000 9.184000 9.488000 3.552000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 2 290 cm
234 198 m
219.0015 162.0036 200.99789 116.9982 180 99 c
159.00211 81.001801 122.9976 73.501648 99 90 c
76.980324 105.13853 60.006542 148.06694 41.136086 180.53233 c
S
0 i
CM
38.985359 102.62452 m
45.699268 107.90878 l
40.569199 111.02044 l
h
38.985359 102.62452 m
f
0 J
0 j
1 0 0 -1 2 290 cm
36.985359 187.37547 m
43.699268 182.09122 l
38.569199 178.97955 l
h
36.985359 187.37547 m
S
1 J
1 j
0.60000002 i
234 198 m
219.0015 162.0036 200.99789 144.15271 180 126.1545 c
159.00211 108.1563 122.9976 100.65615 99 117.1545 c
76.980324 132.29303 60.006542 175.22145 41.136086 207.68684 c
S
0 i
CM
38.985359 75.470016 m
45.699268 80.75428 l
40.569199 83.865936 l
h
38.985359 75.470016 m
f
0 J
0 j
1 0 0 -1 2 290 cm
36.985359 214.52998 m
43.699268 209.24571 l
38.569199 206.13406 l
h
36.985359 214.52998 m
S
1 J
1 j
0.60000002 i
234 198 m
219.0015 162.0036 200.99789 152.9982 180 135 c
159.00211 117.0018 140.9976 118.50165 117 135 c
94.945175 150.16269 62.74884 193.20409 41.380512 225.68774 c
S
0 i
CM
39.032448 57.595009 m
45.898026 62.680656 l
40.861156 65.941017 l
h
39.032448 57.595009 m
f
0 J
0 j
1 0 0 -1 2 290 cm
37.032448 232.40498 m
43.898026 227.31934 l
38.861156 224.05899 l
h
37.032448 232.40498 m
S
1 J
1 j
0.60000002 i
135 198 m
224.25969 214.22903 l
S
0 i
CM
234.13065 74.339882 m
226.79634 78.722572 l
225.72304 72.819359 l
h
234.13065 74.339882 m
f
0 J
0 j
1 0 0 -1 2 290 cm
232.13065 215.66011 m
224.79634 211.27742 l
223.72304 217.18065 l
h
232.13065 215.66011 m
S
1 J
1 j
0.60000002 i
135 216 m
224.25969 232.22903 l
S
0 i
CM
234.13065 56.339882 m
226.79634 60.722576 l
225.72304 54.819355 l
h
234.13065 56.339882 m
f
0 J
0 j
1 0 0 -1 2 290 cm
232.13065 233.66011 m
224.79634 229.27742 l
223.72304 235.18065 l
h
232.13065 233.66011 m
S
1 J
1 j
0.60000002 i
135 234 m
224.25969 250.22903 l
S
0 i
CM
234.13065 38.339882 m
226.79634 42.722576 l
225.72304 36.819355 l
h
234.13065 38.339882 m
f
0 J
0 j
1 0 0 -1 2 290 cm
232.13065 251.66011 m
224.79634 247.27742 l
223.72304 253.18065 l
h
232.13065 251.66011 m
S
ep
end
%%Trailer
%%EOF
